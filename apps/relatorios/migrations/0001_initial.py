# Generated by Django 5.0.6 on 2025-09-15 20:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clientes', '0003_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('core', '0001_initial'),
        ('funcionarios', '0001_initial'),
        ('produtos', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditoriaRelatoriosView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='LogAcessoRelatoriosView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='LogsRelatoriosView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Agendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(help_text="Nome do agendamento, ex: 'Relatório de Vendas Mensal'.", max_length=200)),
                ('descricao', models.TextField(blank=True, help_text='Descrição detalhada do agendamento ou do relatório.')),
                ('periodicidade', models.CharField(choices=[('diario', 'Diário'), ('semanal', 'Semanal'), ('mensal', 'Mensal'), ('anual', 'Anual')], default='mensal', max_length=20)),
                ('proximo_agendamento', models.DateTimeField(help_text='Data e hora do próximo agendamento.')),
                ('ultimo_executado', models.DateTimeField(blank=True, help_text='Última execução realizada.', null=True)),
                ('status', models.CharField(choices=[('ativo', 'Ativo'), ('inativo', 'Inativo'), ('executado', 'Executado'), ('erro', 'Erro')], default='ativo', max_length=20)),
                ('observacoes', models.TextField(blank=True, help_text='Observações gerais sobre este agendamento.')),
                ('empresa', models.ForeignKey(help_text='Empresa responsável pelo agendamento.', on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='core.empresa')),
                ('responsavel', models.ForeignKey(blank=True, help_text='Usuário responsável por este agendamento.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agendamentos_responsavel', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Agendamento',
                'verbose_name_plural': 'Agendamentos',
                'ordering': ['-proximo_agendamento'],
            },
        ),
        migrations.CreateModel(
            name='AlertaGerencial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tipo_alerta', models.CharField(choices=[('meta_nao_atingida', 'Meta Não Atingida'), ('queda_vendas', 'Queda nas Vendas'), ('estoque_baixo', 'Estoque Baixo'), ('margem_baixa', 'Margem Baixa'), ('cliente_inativo', 'Cliente Inativo'), ('produto_sem_giro', 'Produto Sem Giro'), ('vencimento_proximo', 'Vencimento Próximo'), ('performance_vendedor', 'Performance Vendedor')], max_length=25)),
                ('prioridade', models.CharField(choices=[('baixa', 'Baixa'), ('media', 'Média'), ('alta', 'Alta'), ('critica', 'Crítica')], max_length=10)),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField()),
                ('valor_atual', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('valor_esperado', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('data_referencia', models.DateField()),
                ('acoes_recomendadas', models.JSONField(blank=True, default=list)),
                ('ativo', models.BooleanField(default=True)),
                ('data_resolucao', models.DateTimeField(blank=True, null=True)),
                ('observacoes_resolucao', models.TextField(blank=True)),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clientes.cliente')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.empresa')),
                ('funcionario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='funcionarios.funcionario')),
                ('loja', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.loja')),
                ('produto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='produtos.produto')),
                ('resolvido_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Alerta Gerencial',
                'verbose_name_plural': 'Alertas Gerenciais',
                'ordering': ['-prioridade', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnaliseClientes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tipo_segmentacao', models.CharField(choices=[('rfm', 'RFM (Recência, Frequência, Valor)'), ('valor', 'Por Valor de Compra'), ('frequencia', 'Por Frequência'), ('produtos', 'Por Produtos Comprados'), ('geografica', 'Geográfica')], max_length=20)),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField()),
                ('total_clientes_analisados', models.IntegerField(default=0)),
                ('total_clientes_ativos', models.IntegerField(default=0)),
                ('valor_medio_compra', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('frequencia_media_compra', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('clientes_vip', models.JSONField(blank=True, default=list)),
                ('clientes_frequentes', models.JSONField(blank=True, default=list)),
                ('clientes_ocasionais', models.JSONField(blank=True, default=list)),
                ('clientes_inativos', models.JSONField(blank=True, default=list)),
                ('clientes_em_risco', models.JSONField(blank=True, default=list)),
                ('produtos_mais_vendidos', models.JSONField(blank=True, default=list)),
                ('categorias_preferidas', models.JSONField(blank=True, default=dict)),
                ('distribuicao_compras_mes', models.JSONField(blank=True, default=dict)),
                ('distribuicao_compras_dia_semana', models.JSONField(blank=True, default=dict)),
                ('distribuicao_compras_hora', models.JSONField(blank=True, default=dict)),
                ('distribuicao_por_cidade', models.JSONField(blank=True, default=dict)),
                ('distribuicao_por_bairro', models.JSONField(blank=True, default=dict)),
                ('recomendacoes_retencao', models.JSONField(blank=True, default=list)),
                ('recomendacoes_reativacao', models.JSONField(blank=True, default=list)),
                ('dados_detalhados', models.JSONField(blank=True, default=dict)),
                ('data_processamento', models.DateTimeField(auto_now_add=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.empresa')),
                ('loja', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.loja')),
                ('usuario_solicitante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Análise de Clientes',
                'verbose_name_plural': 'Análises de Clientes',
                'ordering': ['-data_processamento'],
            },
        ),
        migrations.CreateModel(
            name='AnaliseEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tipo_analise', models.CharField(choices=[('giro', 'Giro de Estoque'), ('abc', 'Curva ABC'), ('vencimento', 'Análise de Vencimentos'), ('ruptura', 'Análise de Rupturas'), ('sazonalidade', 'Análise de Sazonalidade')], max_length=20)),
                ('data_referencia', models.DateField()),
                ('periodo_analise_dias', models.IntegerField(default=90)),
                ('total_produtos_analisados', models.IntegerField(default=0)),
                ('valor_estoque_total', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('giro_medio', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('produtos_classe_a', models.JSONField(blank=True, default=list)),
                ('produtos_classe_b', models.JSONField(blank=True, default=list)),
                ('produtos_classe_c', models.JSONField(blank=True, default=list)),
                ('produtos_ruptura', models.JSONField(blank=True, default=list)),
                ('produtos_excesso', models.JSONField(blank=True, default=list)),
                ('produtos_vencendo', models.JSONField(blank=True, default=list)),
                ('produtos_sem_giro', models.JSONField(blank=True, default=list)),
                ('vendas_por_mes', models.JSONField(blank=True, default=dict)),
                ('tendencia_vendas', models.CharField(blank=True, max_length=20)),
                ('recomendacoes_compra', models.JSONField(blank=True, default=list)),
                ('recomendacoes_promocao', models.JSONField(blank=True, default=list)),
                ('dados_completos', models.JSONField(blank=True, default=dict)),
                ('data_processamento', models.DateTimeField(auto_now_add=True)),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.categoria')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.empresa')),
                ('loja', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.loja')),
                ('usuario_solicitante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Análise de Estoque',
                'verbose_name_plural': 'Análises de Estoque',
                'ordering': ['-data_processamento'],
            },
        ),
        migrations.CreateModel(
            name='AnaliseVendas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField()),
                ('dimensao', models.CharField(choices=[('produto', 'Por Produto'), ('categoria', 'Por Categoria'), ('cliente', 'Por Cliente'), ('vendedor', 'Por Vendedor'), ('forma_pagamento', 'Por Forma de Pagamento'), ('periodo', 'Por Período'), ('loja', 'Por Loja')], max_length=20)),
                ('total_vendas', models.IntegerField(default=0)),
                ('total_itens', models.IntegerField(default=0)),
                ('faturamento_total', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('ticket_medio', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('top_produtos', models.JSONField(blank=True, default=list)),
                ('top_clientes', models.JSONField(blank=True, default=list)),
                ('top_vendedores', models.JSONField(blank=True, default=list)),
                ('vendas_por_dia', models.JSONField(blank=True, default=dict)),
                ('vendas_por_hora', models.JSONField(blank=True, default=dict)),
                ('vendas_por_dia_semana', models.JSONField(blank=True, default=dict)),
                ('margem_bruta_total', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('margem_bruta_percentual', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('dados_detalhados', models.JSONField(blank=True, default=dict)),
                ('data_processamento', models.DateTimeField(auto_now_add=True)),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.categoria')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.empresa')),
                ('loja', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.loja')),
                ('usuario_solicitante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Análise de Vendas',
                'verbose_name_plural': 'Análises de Vendas',
                'ordering': ['-data_processamento'],
            },
        ),
        migrations.CreateModel(
            name='LogAtividade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('HISTORICO', 'Histórico'), ('AUDITORIA', 'Auditoria'), ('DISTRIBUICAO', 'Distribuição'), ('ERRO', 'Erro do Sistema')], max_length=20)),
                ('status', models.CharField(choices=[('SUCESSO', 'Sucesso'), ('FALHA', 'Falha')], default='SUCESSO', max_length=10)),
                ('acao', models.CharField(max_length=255)),
                ('detalhes', models.JSONField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log de Atividade',
                'verbose_name_plural': 'Logs de Atividades',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='LogRelatorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acao', models.CharField(choices=[('GERACAO', 'Geração'), ('ENVIO', 'Envio por E-mail'), ('EXPORT', 'Exportação'), ('ACESSO', 'Acesso/Visualização'), ('CRIACAO', 'Criação de Agendamento'), ('ALTERACAO', 'Alteração de Agendamento'), ('EXCLUSAO', 'Exclusão de Agendamento')], help_text='Ação que foi realizada', max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Data e hora em que a ação ocorreu')),
                ('detalhes', models.TextField(help_text='Detalhes sobre a ação, como nome do relatório ou destinatários')),
                ('usuario', models.ForeignKey(blank=True, help_text='Utilizador que realizou a ação', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log de Relatório',
                'verbose_name_plural': 'Logs de Relatórios',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='RegraDistribuicao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_regra', models.CharField(help_text="Nome descritivo da regra. Ex: 'Enviar DRE para Direção'", max_length=255)),
                ('metodo_entrega', models.CharField(choices=[('EMAIL', 'E-mail'), ('FTP', 'Servidor FTP'), ('WEBHOOK', 'API Webhook')], default='EMAIL', max_length=10)),
                ('formato', models.CharField(choices=[('PDF', 'PDF'), ('EXCEL', 'Excel (.xlsx)'), ('CSV', 'CSV')], default='PDF', max_length=10)),
                ('destinatarios', models.TextField(help_text='Lista de destinatários. Para e-mails, separe por vírgula. Para webhooks, coloque a URL.')),
                ('ativo', models.BooleanField(default=True, help_text='Desmarque para desativar esta regra de distribuição.')),
                ('agendamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regras_distribuicao', to='relatorios.agendamento')),
            ],
            options={
                'verbose_name': 'Regra de Distribuição',
                'verbose_name_plural': 'Regras de Distribuição',
            },
        ),
        migrations.CreateModel(
            name='TemplateRelatorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=255, verbose_name='Nome do Template')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('campos', models.JSONField(default=list, help_text='Lista de campos a incluir no relatório.', verbose_name='Campos/Colunas')),
                ('filtros_disponiveis', models.JSONField(default=list, help_text='Campos pelos quais se pode filtrar.', verbose_name='Filtros Disponíveis')),
                ('ativo', models.BooleanField(default=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates_relatorios', to='core.empresa')),
                ('modelo_base', models.ForeignKey(help_text='O modelo principal sobre o qual o relatório é baseado.', on_delete=django.db.models.deletion.PROTECT, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Template de Relatório',
                'verbose_name_plural': 'Templates de Relatórios',
                'ordering': ['nome'],
                'unique_together': {('empresa', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='Relatorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('formato', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV')], default='pdf', max_length=10, verbose_name='Formato')),
                ('filtros_aplicados', models.JSONField(default=dict, verbose_name='Filtros Aplicados')),
                ('data_geracao', models.DateTimeField(auto_now_add=True)),
                ('arquivo_gerado', models.FileField(blank=True, null=True, upload_to='relatorios/', verbose_name='Ficheiro do Relatório')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('gerando', 'Gerando'), ('concluido', 'Concluído'), ('erro', 'Erro')], default='pendente', max_length=15, verbose_name='Status')),
                ('gerado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='relatorios.templaterelatorio')),
            ],
            options={
                'verbose_name': 'Relatório Gerado',
                'verbose_name_plural': 'Relatórios Gerados',
                'ordering': ['-data_geracao'],
            },
        ),
        migrations.CreateModel(
            name='AgendamentoRelatorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('frequencia', models.CharField(choices=[('diario', 'Diário'), ('semanal', 'Semanal'), ('mensal', 'Mensal')], max_length=10, verbose_name='Frequência')),
                ('horario', models.TimeField(verbose_name='Horário de Execução')),
                ('destinatarios', models.TextField(help_text='Separados por vírgula.', verbose_name='Emails de Destinatários')),
                ('ativo', models.BooleanField(default=True, verbose_name='Agendamento Ativo')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='relatorios.templaterelatorio')),
            ],
            options={
                'verbose_name': 'Agendamento de Relatório',
                'verbose_name_plural': 'Agendamentos de Relatórios',
            },
        ),
        migrations.CreateModel(
            name='TipoRelatorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('codigo', models.CharField(max_length=50, unique=True)),
                ('nome', models.CharField(max_length=200)),
                ('descricao', models.TextField()),
                ('categoria', models.CharField(choices=[('vendas', 'Vendas'), ('estoque', 'Estoque'), ('financeiro', 'Financeiro'), ('clientes', 'Clientes'), ('funcionarios', 'Funcionários'), ('produtos', 'Produtos'), ('regulatorio', 'Regulatório'), ('gerencial', 'Gerencial'), ('operacional', 'Operacional')], max_length=15)),
                ('periodicidade', models.CharField(choices=[('diario', 'Diário'), ('semanal', 'Semanal'), ('mensal', 'Mensal'), ('trimestral', 'Trimestral'), ('semestral', 'Semestral'), ('anual', 'Anual'), ('sob_demanda', 'Sob Demanda')], default='sob_demanda', max_length=15)),
                ('requer_aprovacao', models.BooleanField(default=False)),
                ('publico', models.BooleanField(default=True, help_text='Disponível para todos os usuários')),
                ('parametros_schema', models.JSONField(default=dict, help_text='Schema JSON dos parâmetros aceitos pelo relatório')),
                ('query_sql', models.TextField(blank=True, help_text='Query SQL personalizada')),
                ('template_html', models.TextField(blank=True, help_text='Template HTML para exibição')),
                ('ativo', models.BooleanField(default=True)),
                ('ordem_exibicao', models.IntegerField(default=0)),
                ('cargos_permitidos', models.ManyToManyField(blank=True, help_text='Cargos que podem acessar este relatório', to='funcionarios.cargo')),
            ],
            options={
                'verbose_name': 'Tipo de Relatório',
                'verbose_name_plural': 'Tipos de Relatórios',
                'ordering': ['categoria', 'ordem_exibicao', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='RelatorioGerado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('codigo_relatorio', models.CharField(max_length=20, unique=True)),
                ('parametros', models.JSONField(default=dict, help_text='Parâmetros utilizados na geração')),
                ('data_inicio', models.DateField(blank=True, null=True)),
                ('data_fim', models.DateField(blank=True, null=True)),
                ('formato', models.CharField(choices=[('html', 'HTML'), ('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON')], default='html', max_length=10)),
                ('status', models.CharField(choices=[('processando', 'Processando'), ('concluido', 'Concluído'), ('erro', 'Erro'), ('cancelado', 'Cancelado')], default='processando', max_length=15)),
                ('data_solicitacao', models.DateTimeField(auto_now_add=True)),
                ('data_inicio_processamento', models.DateTimeField(blank=True, null=True)),
                ('data_conclusao', models.DateTimeField(blank=True, null=True)),
                ('tempo_processamento', models.DurationField(blank=True, null=True)),
                ('arquivo_resultado', models.FileField(blank=True, null=True, upload_to='relatorios/gerados/')),
                ('dados_resultado', models.JSONField(blank=True, default=dict)),
                ('total_registros', models.IntegerField(default=0)),
                ('mensagem_erro', models.TextField(blank=True)),
                ('data_aprovacao', models.DateTimeField(blank=True, null=True)),
                ('aprovador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='relatorios_aprovados', to=settings.AUTH_USER_MODEL)),
                ('categorias', models.ManyToManyField(blank=True, to='core.categoria')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.empresa')),
                ('funcionarios', models.ManyToManyField(blank=True, to='funcionarios.funcionario')),
                ('lojas', models.ManyToManyField(blank=True, to='core.loja')),
                ('solicitante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relatorios_solicitados', to=settings.AUTH_USER_MODEL)),
                ('tipo_relatorio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='execucoes', to='relatorios.tiporelatorio')),
            ],
            options={
                'verbose_name': 'Relatório Gerado',
                'verbose_name_plural': 'Relatórios Gerados',
                'ordering': ['-data_solicitacao'],
            },
        ),
        migrations.CreateModel(
            name='DashboardConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=200)),
                ('descricao', models.TextField(blank=True)),
                ('codigo', models.CharField(max_length=50)),
                ('publico', models.BooleanField(default=False, help_text='Visível para outros usuários')),
                ('configuracao_layout', models.JSONField(default=dict, help_text='Configuração do layout dos widgets')),
                ('widgets_incluidos', models.JSONField(default=list, help_text='Lista de widgets incluídos no dashboard')),
                ('auto_refresh', models.BooleanField(default=True)),
                ('intervalo_refresh', models.IntegerField(default=300, help_text='Intervalo de atualização em segundos')),
                ('ativo', models.BooleanField(default=True)),
                ('dashboard_padrao', models.BooleanField(default=False)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.empresa')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboards_relatorios', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configuração de Dashboard',
                'verbose_name_plural': 'Configurações de Dashboards',
                'ordering': ['nome'],
                'unique_together': {('codigo', 'usuario', 'empresa')},
            },
        ),
        migrations.CreateModel(
            name='MetricaKPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('codigo', models.CharField(max_length=50, unique=True)),
                ('nome', models.CharField(max_length=200)),
                ('descricao', models.TextField()),
                ('tipo_metrica', models.CharField(choices=[('vendas', 'Vendas'), ('financeiro', 'Financeiro'), ('estoque', 'Estoque'), ('clientes', 'Clientes'), ('operacional', 'Operacional')], max_length=15)),
                ('periodo', models.CharField(choices=[('diario', 'Diário'), ('semanal', 'Semanal'), ('mensal', 'Mensal'), ('trimestral', 'Trimestral'), ('anual', 'Anual')], max_length=15)),
                ('data_referencia', models.DateField()),
                ('valor_atual', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('valor_anterior', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('valor_meta', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('variacao_absoluta', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('variacao_percentual', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('unidade_medida', models.CharField(default='unidade', max_length=20)),
                ('formato_exibicao', models.CharField(choices=[('numero', 'Número'), ('moeda', 'Moeda'), ('percentual', 'Percentual'), ('tempo', 'Tempo')], default='numero', max_length=20)),
                ('detalhes_calculo', models.JSONField(blank=True, default=dict)),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.categoria')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.empresa')),
                ('loja', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.loja')),
            ],
            options={
                'verbose_name': 'Métrica KPI',
                'verbose_name_plural': 'Métricas KPIs',
                'ordering': ['-data_referencia', 'tipo_metrica', 'codigo'],
                'unique_together': {('codigo', 'data_referencia', 'loja', 'empresa')},
            },
        ),
    ]
