# Generated by Django 4.2.10 on 2025-10-16 13:56

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('financeiro', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssinaturaDigital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ultimo_hash', models.CharField(blank=True, max_length=256, null=True, verbose_name='Último Hash em Cadeia (SAF-T)')),
                ('chave_privada', models.TextField(blank=True, help_text='Chave privada RSA para assinatura. Mantenha em segredo!', null=True)),
                ('chave_publica', models.TextField(blank=True, help_text='Chave pública RSA.', null=True)),
                ('dados_series_fiscais', models.JSONField(default=dict, verbose_name='Dados de Hash e Código AGT por Série')),
                ('data_geracao', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaxaIVAAGT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(help_text='Ex: IVA Taxa Normal 14%', max_length=100)),
                ('codigo_pais', models.CharField(default='AO', editable=False, max_length=2)),
                ('tax_type', models.CharField(choices=[('IVA', 'Imposto sobre o Valor Acrescentado (IVA)'), ('IS', 'Isenção'), ('NS', 'Não Sujeição')], max_length=3, verbose_name='Tipo de Imposto (TaxType)')),
                ('tax_code', models.CharField(choices=[('NOR', 'Normal'), ('INT', 'Intercalar'), ('RED', 'Reduzida'), ('ISE', 'Isento'), ('NSU', 'Não Sujeito')], max_length=3, verbose_name='Código da Taxa (TaxCode)')),
                ('tax_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Taxa em percentagem (e.g., 14.00)', max_digits=5)),
                ('exemption_reason', models.CharField(blank=True, choices=[('M99', 'Outras isenções (Art. 18.º CIVA)'), ('M01', 'Art. 13.º - Isenções nas Transmissões de Bens'), ('M02', 'Art. 14.º - Isenções nas Prestações de Serviços')], max_length=3, null=True, verbose_name='Razão de Isenção (TaxExemptionCode)')),
                ('legislacao_referencia', models.CharField(blank=True, max_length=255)),
                ('ativo', models.BooleanField(default=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taxas_iva', to='core.empresa')),
            ],
            options={
                'verbose_name': 'Taxa de IVA (AGT)',
                'verbose_name_plural': 'Tabela de Impostos (AGT)',
                'ordering': ['-tax_percentage', 'tax_type'],
            },
        ),
        migrations.CreateModel(
            name='RetencaoFonte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('referencia_documento', models.CharField(help_text='Ex: Número da Fatura do Fornecedor ou Recibo', max_length=50)),
                ('data_retencao', models.DateField(help_text='Data em que a retenção foi efetuada (geralmente data de pagamento)')),
                ('valor_base', models.DecimalField(decimal_places=2, help_text='Base tributável da retenção', max_digits=12)),
                ('valor_retido', models.DecimalField(decimal_places=2, help_text='Valor efetivamente retido', max_digits=12)),
                ('taxa_retencao', models.DecimalField(decimal_places=2, help_text='Percentual da retenção aplicada sobre o valor base', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('tipo_retencao', models.CharField(choices=[('IRT', 'Imposto sobre Rendimentos do Trabalho'), ('IRPC', 'Imposto sobre Rendimentos de Pessoas Coletivas'), ('IVA', 'IVA Retido na Fonte'), ('IS', 'Imposto do Selo'), ('OUTROS', 'Outros tipos de retenção')], help_text='Tipo de imposto retido (código SAF-T obrigatório - ex: IRPC, IRT)', max_length=10)),
                ('codigo_tributario', models.CharField(blank=True, help_text='Código da Secção/Artigo da lei fiscal (se aplicável)', max_length=50)),
                ('paga_ao_estado', models.BooleanField(default=False, help_text='Indica se o valor retido já foi pago ao Estado')),
                ('conta_pagar', models.ForeignKey(blank=True, help_text='Conta a pagar que gerou esta retenção', null=True, on_delete=django.db.models.deletion.PROTECT, to='financeiro.contapagar')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.empresa')),
            ],
            options={
                'verbose_name': 'Retenção na Fonte',
                'verbose_name_plural': 'Retenções na Fonte',
                'ordering': ['-data_retencao'],
            },
        ),
    ]
