# Generated by Django 4.2.10 on 2025-10-18 14:31

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('produtos', '0001_initial'),
        ('clientes', '0005_alter_historicocliente_tipo_interacao'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
        ('fiscal', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentoFiscal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tipo_documento', models.CharField(choices=[('FT', 'Fatura'), ('FS', 'Fatura Simplificada'), ('FR', 'Fatura-Recibo'), ('NC', 'Nota de Crédito'), ('ND', 'Nota de Débito'), ('VD', 'Venda a Dinheiro'), ('TV', 'Talão de Venda'), ('TD', 'Talão de Devolução'), ('AA', 'Alienação de Ativos'), ('DA', 'Devolução de Ativos'), ('RP', 'Prémio ou Penalização'), ('RE', 'Estorno ou Anulação'), ('CS', 'Imputação a Co-Produtos'), ('LD', 'Lançamentos Diversos'), ('RA', 'Resseguro Aceite'), ('RC', 'Resseguro Cedido')], max_length=2, verbose_name='Tipo de Documento')),
                ('serie', models.CharField(default='A', help_text='Série do documento (ex: A, B, C, 2024A)', max_length=10)),
                ('numero', models.PositiveIntegerField(help_text='Número sequencial dentro da série', verbose_name='Número do Documento')),
                ('numero_documento', models.CharField(editable=False, help_text='Formato: TIPO SERIE/NUMERO (ex: FT A/1234)', max_length=50, verbose_name='Número Completo')),
                ('atcud', models.CharField(db_index=True, editable=False, help_text='Código Único de Documento gerado pelo sistema', max_length=70, verbose_name='ATCUD')),
                ('data_emissao', models.DateField(help_text='Data de emissão do documento', verbose_name='Data de Emissão')),
                ('data_vencimento', models.DateField(blank=True, help_text='Data de vencimento para documentos a prazo', null=True, verbose_name='Data de Vencimento')),
                ('data_operacao', models.DateField(blank=True, help_text='Data efetiva da operação (se diferente da emissão)', null=True, verbose_name='Data da Operação')),
                ('hora_emissao', models.TimeField(auto_now_add=True, verbose_name='Hora de Emissão')),
                ('cliente_nome', models.CharField(max_length=200, verbose_name='Nome do Cliente')),
                ('cliente_nif', models.CharField(blank=True, max_length=20, verbose_name='NIF do Cliente')),
                ('cliente_endereco', models.TextField(blank=True, verbose_name='Endereço do Cliente')),
                ('cliente_email', models.EmailField(blank=True, max_length=254, verbose_name='Email do Cliente')),
                ('cliente_telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone do Cliente')),
                ('tipo_cliente', models.CharField(choices=[('particular', 'Particular'), ('empresa', 'Empresa'), ('isento', 'Isento de IVA'), ('nao_residente', 'Não Residente'), ('regime_especial', 'Regime Especial')], default='particular', max_length=20, verbose_name='Tipo de Cliente')),
                ('valor_base', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Soma de todas as linhas sem IVA', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor Base (sem IVA)')),
                ('valor_iva', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Soma de todo o IVA aplicado', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor do IVA')),
                ('valor_desconto', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Desconto total aplicado', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor de Desconto')),
                ('valor_retencao', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Retenção aplicada (se aplicável)', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor de Retenção na Fonte')),
                ('valor_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Valor final a pagar/receber', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Valor Total')),
                ('moeda', models.CharField(default='AOA', help_text='Código ISO da moeda (ex: AOA, USD, EUR)', max_length=3, verbose_name='Moeda')),
                ('taxa_cambio', models.DecimalField(decimal_places=6, default=Decimal('1.000000'), help_text='Taxa de conversão para AOA (se aplicável)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.000001'))], verbose_name='Taxa de Câmbio')),
                ('observacoes', models.TextField(blank=True, help_text='Observações ou notas adicionais', verbose_name='Observações')),
                ('referencia_externa', models.CharField(blank=True, help_text='Número de referência do cliente ou sistema externo', max_length=100, verbose_name='Referência Externa')),
                ('condicoes_pagamento', models.CharField(blank=True, help_text='Ex: Pronto pagamento, 30 dias, etc.', max_length=100, verbose_name='Condições de Pagamento')),
                ('forma_pagamento', models.CharField(blank=True, help_text='Ex: Dinheiro, Transferência, Cartão', max_length=50, verbose_name='Forma de Pagamento')),
                ('status', models.CharField(choices=[('draft', 'Rascunho'), ('confirmed', 'Confirmado'), ('posted', 'Lançado'), ('paid', 'Pago'), ('cancelled', 'Cancelado'), ('rectified', 'Retificado')], default='draft', max_length=20, verbose_name='Status')),
                ('origem', models.CharField(choices=[('manual', 'Manual'), ('sistema', 'Sistema'), ('importacao', 'Importação'), ('api', 'API Externa'), ('edi', 'EDI')], default='manual', max_length=20, verbose_name='Origem')),
                ('hash_documento', models.CharField(blank=True, editable=False, help_text='SHA-256 do conteúdo do documento', max_length=256, verbose_name='Hash do Documento')),
                ('hash_anterior', models.CharField(blank=True, editable=False, help_text='Hash do documento anterior da mesma série', max_length=256, verbose_name='Hash do Documento Anterior')),
                ('assinatura_digital', models.TextField(blank=True, editable=False, help_text='Assinatura RSA do hash do documento', verbose_name='Assinatura Digital')),
                ('data_confirmacao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Confirmação')),
                ('saft_hash', models.CharField(blank=True, editable=False, help_text='Hash específico para SAF-T', max_length=256, verbose_name='Hash SAF-T')),
                ('periodo_tributacao', models.CharField(editable=False, help_text='Formato YYYY-MM para SAF-T', max_length=7, verbose_name='Período de Tributação')),
                ('metadados', models.JSONField(blank=True, default=dict, help_text='Dados adicionais em formato JSON', verbose_name='Metadados')),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='documentos_fiscais', to='clientes.cliente', verbose_name='Cliente')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos_fiscais', to='core.empresa')),
                ('usuario_confirmacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='documentos_confirmados', to=settings.AUTH_USER_MODEL, verbose_name='Confirmado por')),
                ('usuario_criacao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documentos_criados', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('usuario_modificacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='documentos_modificados', to=settings.AUTH_USER_MODEL, verbose_name='Modificado por')),
            ],
            options={
                'verbose_name': 'Documento Fiscal',
                'verbose_name_plural': 'Documentos Fiscais',
                'ordering': ['-data_emissao', '-numero'],
            },
        ),
        migrations.CreateModel(
            name='DocumentoFiscalLinha',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('numero_linha', models.PositiveIntegerField(verbose_name='Número da Linha')),
                ('codigo_produto', models.CharField(max_length=50, verbose_name='Código do Produto')),
                ('descricao', models.CharField(max_length=200, verbose_name='Descrição')),
                ('unidade', models.CharField(default='UN', max_length=10, verbose_name='Unidade de Medida')),
                ('quantidade', models.DecimalField(decimal_places=3, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Quantidade')),
                ('preco_unitario', models.DecimalField(decimal_places=4, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))], verbose_name='Preço Unitário')),
                ('valor_desconto_linha', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Desconto da Linha')),
                ('valor_liquido', models.DecimalField(decimal_places=2, editable=False, help_text='Quantidade × Preço - Desconto', max_digits=12, verbose_name='Valor Líquido')),
                ('valor_iva_linha', models.DecimalField(decimal_places=2, editable=False, max_digits=12, verbose_name='Valor IVA da Linha')),
                ('valor_total_linha', models.DecimalField(decimal_places=2, editable=False, max_digits=12, verbose_name='Valor Total da Linha')),
                ('observacoes_linha', models.TextField(blank=True, verbose_name='Observações da Linha')),
                ('documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linhas', to='fiscal.documentofiscal')),
                ('produto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='produtos.produto', verbose_name='Produto')),
                ('taxa_iva', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='fiscal.taxaivaagt', verbose_name='Taxa de IVA')),
            ],
            options={
                'verbose_name': 'Linha de Documento Fiscal',
                'verbose_name_plural': 'Linhas de Documentos Fiscais',
                'ordering': ['numero_linha'],
            },
        ),
        migrations.AddConstraint(
            model_name='documentofiscallinha',
            constraint=models.UniqueConstraint(fields=('documento', 'numero_linha'), name='unique_linha_por_documento'),
        ),
        migrations.AddIndex(
            model_name='documentofiscal',
            index=models.Index(fields=['empresa', 'data_emissao'], name='fiscal_docu_empresa_2b4be2_idx'),
        ),
        migrations.AddIndex(
            model_name='documentofiscal',
            index=models.Index(fields=['empresa', 'status'], name='fiscal_docu_empresa_10529b_idx'),
        ),
        migrations.AddIndex(
            model_name='documentofiscal',
            index=models.Index(fields=['cliente', 'data_emissao'], name='fiscal_docu_cliente_8097de_idx'),
        ),
        migrations.AddIndex(
            model_name='documentofiscal',
            index=models.Index(fields=['numero_documento'], name='fiscal_docu_numero__7c24db_idx'),
        ),
        migrations.AddIndex(
            model_name='documentofiscal',
            index=models.Index(fields=['atcud'], name='fiscal_docu_atcud_f78591_idx'),
        ),
        migrations.AddIndex(
            model_name='documentofiscal',
            index=models.Index(fields=['hash_documento'], name='fiscal_docu_hash_do_062bea_idx'),
        ),
        migrations.AddConstraint(
            model_name='documentofiscal',
            constraint=models.UniqueConstraint(fields=('empresa', 'tipo_documento', 'serie', 'numero'), name='unique_documento_por_empresa_serie'),
        ),
        migrations.AddConstraint(
            model_name='documentofiscal',
            constraint=models.UniqueConstraint(fields=('empresa', 'atcud'), name='unique_atcud_por_empresa'),
        ),
    ]
