# Generated by Django 5.0.6 on 2025-09-15 20:04

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Inventario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('numero_inventario', models.CharField(max_length=20, unique=True)),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField(blank=True)),
                ('apenas_produtos_ativos', models.BooleanField(default=True)),
                ('apenas_com_estoque', models.BooleanField(default=False)),
                ('data_planejada', models.DateField()),
                ('data_inicio', models.DateTimeField(blank=True, null=True)),
                ('data_conclusao', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('planejado', 'Planejado'), ('em_andamento', 'Em Andamento'), ('concluido', 'Concluído'), ('cancelado', 'Cancelado')], default='planejado', max_length=15)),
                ('requer_dupla_contagem', models.BooleanField(default=False)),
                ('bloqueio_movimentacao', models.BooleanField(default=True, help_text='Bloquear movimentações durante inventário')),
                ('total_produtos_planejados', models.IntegerField(default=0)),
                ('total_produtos_contados', models.IntegerField(default=0)),
                ('total_divergencias', models.IntegerField(default=0)),
                ('valor_divergencia_total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('observacoes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Inventário',
                'verbose_name_plural': 'Inventários',
                'ordering': ['-data_planejada'],
            },
        ),
        migrations.CreateModel(
            name='ItemInventario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantidade_sistema', models.IntegerField(default=0, help_text='Quantidade no sistema')),
                ('quantidade_contada_1', models.IntegerField(blank=True, help_text='Primeira contagem', null=True)),
                ('quantidade_contada_2', models.IntegerField(blank=True, help_text='Segunda contagem', null=True)),
                ('quantidade_contada', models.IntegerField(blank=True, help_text='Quantidade final contada', null=True)),
                ('valor_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('data_contagem_1', models.DateTimeField(blank=True, null=True)),
                ('data_contagem_2', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('primeira_contagem', 'Primeira Contagem'), ('segunda_contagem', 'Segunda Contagem'), ('finalizado', 'Finalizado')], default='pendente', max_length=20)),
                ('observacoes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Item do Inventário',
                'verbose_name_plural': 'Itens do Inventário',
                'ordering': ['produto__nome_comercial'],
            },
        ),
        migrations.CreateModel(
            name='LocalizacaoEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do local ou setor do estoque', max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True, help_text='Descrição opcional do local', null=True)),
                ('ativo', models.BooleanField(default=True, help_text='Se o local está ativo e disponível para uso')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Localização',
                'verbose_name_plural': 'Localizações',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='MovimentacaoEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tipo', models.CharField(choices=[('entrada', 'Entrada'), ('saida', 'Saída'), ('ajuste', 'Ajuste')], max_length=20)),
                ('quantidade', models.IntegerField()),
                ('motivo', models.CharField(max_length=200)),
                ('observacoes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Movimentação de Estoque',
                'verbose_name_plural': 'Movimentações de Estoque',
            },
        ),
        migrations.CreateModel(
            name='TipoMovimentacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('natureza', models.CharField(choices=[('entrada', 'Entrada'), ('saida', 'Saída'), ('ajuste', 'Ajuste'), ('transferencia', 'Transferência')], max_length=15)),
                ('requer_documento', models.BooleanField(default=False, help_text='Requer documento fiscal')),
                ('requer_aprovacao', models.BooleanField(default=False, help_text='Requer aprovação para executar')),
                ('automatico', models.BooleanField(default=False, help_text='Movimentação automática do sistema')),
                ('controla_lote', models.BooleanField(default=True, help_text='Controla número de lote')),
                ('controla_validade', models.BooleanField(default=True, help_text='Controla data de validade')),
                ('descricao', models.TextField(blank=True)),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Tipo de Movimentação',
                'verbose_name_plural': 'Tipos de Movimentação',
                'ordering': ['natureza', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='AlertaEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tipo_alerta', models.CharField(choices=[('estoque_baixo', 'Estoque Baixo'), ('estoque_zerado', 'Estoque Zerado'), ('vencimento_proximo', 'Vencimento Próximo'), ('produto_vencido', 'Produto Vencido'), ('ruptura', 'Ruptura de Estoque'), ('excesso', 'Excesso de Estoque')], max_length=20)),
                ('prioridade', models.CharField(choices=[('baixa', 'Baixa'), ('media', 'Média'), ('alta', 'Alta'), ('critica', 'Crítica')], max_length=10)),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField()),
                ('quantidade_atual', models.IntegerField()),
                ('quantidade_recomendada', models.IntegerField(blank=True, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('data_resolucao', models.DateTimeField(blank=True, null=True)),
                ('observacoes_resolucao', models.TextField(blank=True)),
                ('notificado', models.BooleanField(default=False)),
                ('data_notificacao', models.DateTimeField(blank=True, null=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.empresa')),
                ('loja', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.loja')),
            ],
            options={
                'verbose_name': 'Alerta de Estoque',
                'verbose_name_plural': 'Alertas de Estoque',
                'ordering': ['-prioridade', '-created_at'],
            },
        ),
    ]
