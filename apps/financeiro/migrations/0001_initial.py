# Generated by Django 5.0.6 on 2025-09-15 20:04

import datetime
import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaFinanceira',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContaReceber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('numero_documento', models.CharField(max_length=50)),
                ('descricao', models.CharField(max_length=255)),
                ('tipo_conta', models.CharField(choices=[('venda', 'Venda'), ('servico', 'Serviço'), ('aluguel', 'Aluguel'), ('juros', 'Juros'), ('outros', 'Outros')], default='venda', max_length=15)),
                ('data_emissao', models.DateField()),
                ('data_vencimento', models.DateField()),
                ('data_recebimento', models.DateField(blank=True, null=True)),
                ('valor_original', models.DecimalField(decimal_places=2, max_digits=12)),
                ('valor_juros', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_multa', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_desconto', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_recebido', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('valor_saldo', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('numero_parcela', models.IntegerField(default=1)),
                ('total_parcelas', models.IntegerField(default=1)),
                ('status', models.CharField(choices=[('aberta', 'Aberta'), ('vencida', 'Vencida'), ('recebida', 'Recebida'), ('cancelada', 'Cancelada'), ('renegociada', 'Renegociada')], default='aberta', max_length=15)),
                ('observacoes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Conta a Receber',
                'verbose_name_plural': 'Contas a Receber',
                'ordering': ['data_vencimento'],
            },
        ),
        migrations.CreateModel(
            name='FluxoCaixa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_referencia', models.DateField()),
                ('tipo', models.CharField(choices=[('entrada', 'Entrada'), ('saida', 'Saída')], max_length=10)),
                ('valor_previsto', models.DecimalField(decimal_places=2, max_digits=12)),
                ('valor_realizado', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('saldo_acumulado', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('categoria', models.CharField(help_text='Categoria da movimentação', max_length=100)),
                ('descricao', models.CharField(max_length=255)),
                ('realizado', models.BooleanField(default=False)),
                ('observacoes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Fluxo de Caixa',
                'verbose_name_plural': 'Fluxos de Caixa',
                'ordering': ['data_referencia'],
            },
        ),
        migrations.CreateModel(
            name='ImpostoTributo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('codigo_imposto', models.CharField(help_text='Código interno do imposto', max_length=20)),
                ('nome', models.CharField(max_length=200)),
                ('tipo_imposto', models.CharField(choices=[('irpj', 'IRPJ - Imposto de Renda Pessoa Jurídica'), ('csll', 'CSLL - Contribuição Social sobre Lucro Líquido'), ('pis', 'PIS - Programa de Integração Social'), ('cofins', 'COFINS - Contribuição para Financiamento da Seguridade Social'), ('ipi', 'IPI - Imposto sobre Produtos Industrializados'), ('ii', 'II - Imposto de Importação'), ('iof', 'IOF - Imposto sobre Operações Financeiras'), ('icms', 'ICMS - Imposto sobre Circulação de Mercadorias e Serviços'), ('ipva', 'IPVA - Imposto sobre Propriedade de Veículos Automotores'), ('itcmd', 'ITCMD - Imposto sobre Transmissão Causa Mortis e Doação'), ('iss', 'ISS - Imposto sobre Serviços'), ('iptu', 'IPTU - Imposto Predial e Territorial Urbano'), ('itbi', 'ITBI - Imposto sobre Transmissão de Bens Imóveis'), ('inss', 'INSS - Contribuição Previdenciária'), ('fgts', 'FGTS - Fundo de Garantia por Tempo de Serviço'), ('contrib_sindical', 'Contribuição Sindical'), ('simples_nacional', 'Simples Nacional'), ('das', 'DAS - Documento de Arrecadação do Simples Nacional'), ('taxa_fiscal', 'Taxa de Fiscalização'), ('multa', 'Multa Fiscal'), ('juros', 'Juros sobre Impostos'), ('outros', 'Outros Impostos')], max_length=20)),
                ('descricao', models.TextField(blank=True)),
                ('regime_tributario', models.CharField(choices=[('simples_nacional', 'Simples Nacional'), ('lucro_presumido', 'Lucro Presumido'), ('lucro_real', 'Lucro Real'), ('mei', 'MEI - Microempreendedor Individual'), ('lucro_arbitrado', 'Lucro Arbitrado')], help_text='Regime tributário aplicável', max_length=20)),
                ('periodicidade', models.CharField(choices=[('mensal', 'Mensal'), ('bimestral', 'Bimestral'), ('trimestral', 'Trimestral'), ('semestral', 'Semestral'), ('anual', 'Anual'), ('eventual', 'Eventual')], default='mensal', max_length=15)),
                ('ano_referencia', models.IntegerField(help_text='Ano de referência da apuração')),
                ('mes_referencia', models.IntegerField(help_text='Mês de referência (1-12)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('data_inicio_periodo', models.DateField(help_text='Início do período de apuração')),
                ('data_fim_periodo', models.DateField(help_text='Fim do período de apuração')),
                ('data_vencimento', models.DateField(help_text='Data de vencimento do imposto')),
                ('data_pagamento', models.DateField(blank=True, help_text='Data efetiva do pagamento', null=True)),
                ('data_calculo', models.DateTimeField(blank=True, help_text='Data/hora do último cálculo', null=True)),
                ('metodo_calculo', models.CharField(choices=[('percentual_receita', 'Percentual sobre Receita'), ('percentual_lucro', 'Percentual sobre Lucro'), ('valor_fixo', 'Valor Fixo'), ('tabela_progressiva', 'Tabela Progressiva'), ('por_unidade', 'Por Unidade'), ('faixa_receita', 'Faixa de Receita (Simples)'), ('outros', 'Outros')], default='percentual_receita', max_length=20)),
                ('aliquota_percentual', models.DecimalField(decimal_places=4, default=0, help_text='Alíquota em percentual (ex: 5.0000 para 5%)', max_digits=8)),
                ('valor_fixo', models.DecimalField(decimal_places=2, default=0, help_text='Valor fixo do imposto (se aplicável)', max_digits=12)),
                ('base_calculo', models.DecimalField(decimal_places=2, default=0, help_text='Base de cálculo do imposto', max_digits=15)),
                ('receita_bruta', models.DecimalField(decimal_places=2, default=0, help_text='Receita bruta do período', max_digits=15)),
                ('deducoes', models.DecimalField(decimal_places=2, default=0, help_text='Deduções permitidas', max_digits=12)),
                ('valor_calculado', models.DecimalField(decimal_places=2, default=0, help_text='Valor calculado do imposto', max_digits=12)),
                ('valor_devido', models.DecimalField(decimal_places=2, default=0, help_text='Valor devido (após compensações)', max_digits=12)),
                ('valor_pago', models.DecimalField(decimal_places=2, default=0, help_text='Valor efetivamente pago', max_digits=12)),
                ('valor_multa', models.DecimalField(decimal_places=2, default=0, help_text='Multa por atraso', max_digits=10)),
                ('valor_juros', models.DecimalField(decimal_places=2, default=0, help_text='Juros por atraso', max_digits=10)),
                ('valor_total', models.DecimalField(decimal_places=2, default=0, help_text='Valor total (devido + multa + juros)', max_digits=12)),
                ('creditos_periodo_anterior', models.DecimalField(decimal_places=2, default=0, help_text='Créditos do período anterior', max_digits=12)),
                ('compensacoes', models.DecimalField(decimal_places=2, default=0, help_text='Compensações utilizadas', max_digits=12)),
                ('situacao', models.CharField(choices=[('pendente', 'Pendente'), ('calculado', 'Calculado'), ('apurado', 'Apurado'), ('pago', 'Pago'), ('parcelado', 'Parcelado'), ('vencido', 'Vencido'), ('isento', 'Isento'), ('suspenso', 'Suspenso')], default='pendente', max_length=15)),
                ('numero_darf', models.CharField(blank=True, help_text='Número do DARF ou guia de recolhimento', max_length=50)),
                ('codigo_receita', models.CharField(blank=True, help_text='Código da receita federal', max_length=10)),
                ('numero_referencia', models.CharField(blank=True, help_text='Número de referência da guia', max_length=50)),
                ('calculo_automatico', models.BooleanField(default=True, help_text='Calcular automaticamente baseado nas vendas')),
                ('ultima_atualizacao_calculo', models.DateTimeField(blank=True, null=True)),
                ('observacoes', models.TextField(blank=True)),
                ('arquivo_guia', models.FileField(blank=True, help_text='Arquivo da guia de recolhimento', null=True, upload_to='impostos/guias/')),
                ('arquivo_comprovante', models.FileField(blank=True, help_text='Comprovante de pagamento', null=True, upload_to='impostos/comprovantes/')),
            ],
            options={
                'verbose_name': 'Imposto/Tributo',
                'verbose_name_plural': 'Impostos/Tributos',
                'ordering': ['-ano_referencia', '-mes_referencia', 'data_vencimento'],
            },
        ),
        migrations.CreateModel(
            name='LancamentoFinanceiro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tipo', models.CharField(choices=[('entrada', 'Entrada'), ('saida', 'Saída')], max_length=10)),
                ('data', models.DateField()),
            ],
            options={
                'verbose_name': 'Lançamento Financeiro',
                'verbose_name_plural': 'Lançamentos Financeiros',
            },
        ),
        migrations.CreateModel(
            name='MovimentacaoFinanceira',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('numero_documento', models.CharField(blank=True, max_length=50)),
                ('tipo_movimentacao', models.CharField(choices=[('entrada', 'Entrada'), ('saida', 'Saída'), ('transferencia', 'Transferência')], max_length=15)),
                ('tipo_documento', models.CharField(choices=[('dinheiro', 'Dinheiro'), ('cheque', 'Cheque'), ('transferencia', 'Transferência'), ('kwik', 'KWIK'), ('cartao', 'Cartão'), ('debito_automatico', 'Débito Automático'), ('outros', 'Outros')], max_length=20)),
                ('data_movimentacao', models.DateField()),
                ('data_vencimento', models.DateField(blank=True, null=True)),
                ('data_confirmacao', models.DateTimeField(blank=True, null=True)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=12)),
                ('valor_juros', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_multa', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_desconto', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('descricao', models.CharField(max_length=255)),
                ('observacoes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('confirmada', 'Confirmada'), ('cancelada', 'Cancelada'), ('estornada', 'Estornada')], default='pendente', max_length=15)),
                ('confirmada', models.BooleanField(default=False)),
                ('conciliada', models.BooleanField(default=False)),
                ('data_conciliacao', models.DateField(blank=True, null=True)),
                ('numero_cheque', models.CharField(blank=True, max_length=20)),
                ('banco_cheque', models.CharField(blank=True, max_length=100)),
                ('emissor_cheque', models.CharField(blank=True, max_length=200)),
                ('chave_kwik', models.CharField(blank=True, max_length=100)),
                ('txid_kwik', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name': 'Movimentação Financeira',
                'verbose_name_plural': 'Movimentações Financeiras',
                'ordering': ['-data_movimentacao', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MovimentoCaixa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('numero_movimento', models.CharField(help_text='Número sequencial do movimento', max_length=20, unique=True)),
                ('data_movimento', models.DateField(default=datetime.date.today)),
                ('hora_movimento', models.TimeField(auto_now_add=True)),
                ('tipo_movimento', models.CharField(choices=[('abertura', 'Abertura do Caixa'), ('fechamento', 'Fechamento do Caixa'), ('venda', 'Venda'), ('recebimento', 'Recebimento'), ('pagamento', 'Pagamento'), ('sangria', 'Sangria'), ('suprimento', 'Suprimento'), ('troco', 'Troco'), ('devolucao', 'Devolução'), ('desconto', 'Desconto'), ('cancelamento', 'Cancelamento'), ('ajuste', 'Ajuste'), ('outros', 'Outros')], max_length=15)),
                ('forma_pagamento', models.CharField(choices=[('dinheiro', 'Dinheiro'), ('kwik', 'KWIK'), ('cartao_debito', 'Cartão de Débito'), ('cartao_credito', 'Cartão de Crédito'), ('cheque', 'Cheque'), ('vale', 'Vale'), ('outros', 'Outros')], default='dinheiro', max_length=15)),
                ('valor', models.DecimalField(decimal_places=2, help_text='Valor do movimento (positivo para entradas, negativo para saídas)', max_digits=10)),
                ('valor_troco', models.DecimalField(decimal_places=2, default=0, help_text='Valor do troco dado', max_digits=8)),
                ('descricao', models.CharField(max_length=255)),
                ('observacoes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('confirmado', 'Confirmado'), ('cancelado', 'Cancelado'), ('estornado', 'Estornado')], default='pendente', max_length=15)),
                ('confirmado', models.BooleanField(default=False)),
                ('data_confirmacao', models.DateTimeField(blank=True, null=True)),
                ('numero_documento', models.CharField(blank=True, max_length=50)),
                ('numero_cheque', models.CharField(blank=True, max_length=20)),
                ('banco_cheque', models.CharField(blank=True, max_length=100)),
                ('emissor_cheque', models.CharField(blank=True, max_length=200)),
                ('data_cheque', models.DateField(blank=True, null=True)),
                ('chave_kwik', models.CharField(blank=True, max_length=100)),
                ('txid_kwik', models.CharField(blank=True, max_length=100)),
                ('numero_cartao_mascarado', models.CharField(blank=True, max_length=20)),
                ('bandeira_cartao', models.CharField(blank=True, max_length=50)),
                ('numero_autorizacao', models.CharField(blank=True, max_length=20)),
                ('numero_comprovante', models.CharField(blank=True, max_length=30)),
            ],
            options={
                'verbose_name': 'Movimento de Caixa',
                'verbose_name_plural': 'Movimentos de Caixa',
                'ordering': ['-data_movimento', '-hora_movimento'],
            },
        ),
        migrations.CreateModel(
            name='OrcamentoFinanceiro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ano', models.IntegerField()),
                ('mes', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('tipo', models.CharField(choices=[('receita', 'Receita'), ('despesa', 'Despesa')], max_length=10)),
                ('valor_orcado', models.DecimalField(decimal_places=2, max_digits=12)),
                ('valor_realizado', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('valor_variacao', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('percentual_realizacao', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('justificativa_variacao', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Orçamento Financeiro',
                'verbose_name_plural': 'Orçamentos Financeiros',
                'ordering': ['ano', 'mes'],
            },
        ),
        migrations.CreateModel(
            name='PlanoContas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('codigo', models.CharField(help_text='Código da conta', max_length=20, unique=True)),
                ('nome', models.CharField(max_length=200)),
                ('descricao', models.TextField(blank=True)),
                ('nivel', models.IntegerField(default=1, help_text='Nível hierárquico da conta')),
                ('tipo_conta', models.CharField(choices=[('receita', 'Receita'), ('despesa', 'Despesa'), ('ativo', 'Ativo'), ('passivo', 'Passivo'), ('patrimonio', 'Patrimônio Líquido')], max_length=15)),
                ('natureza', models.CharField(choices=[('debito', 'Débito'), ('credito', 'Crédito')], max_length=10)),
                ('aceita_lancamento', models.BooleanField(default=True, help_text='Permite lançamentos diretos')),
                ('ativa', models.BooleanField(default=True)),
                ('ordem', models.IntegerField(default=0, help_text='Ordem de exibição')),
            ],
            options={
                'verbose_name': 'Plano de Contas',
                'verbose_name_plural': 'Planos de Contas',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='CentroCusto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('nome', models.CharField(max_length=200)),
                ('descricao', models.TextField(blank=True)),
                ('ativo', models.BooleanField(default=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.empresa')),
                ('loja', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.loja')),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Centro de Custo',
                'verbose_name_plural': 'Centros de Custo',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracaoImposto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('regime_tributario', models.CharField(choices=[('simples_nacional', 'Simples Nacional'), ('lucro_presumido', 'Lucro Presumido'), ('lucro_real', 'Lucro Real'), ('mei', 'MEI - Microempreendedor Individual'), ('lucro_arbitrado', 'Lucro Arbitrado')], default='simples_nacional', max_length=20)),
                ('anexo_simples', models.CharField(choices=[('anexo_1', 'Anexo I - Comércio'), ('anexo_2', 'Anexo II - Indústria'), ('anexo_3', 'Anexo III - Serviços'), ('anexo_4', 'Anexo IV - Serviços'), ('anexo_5', 'Anexo V - Serviços')], default='anexo_1', help_text='Anexo do Simples Nacional', max_length=10)),
                ('cnae_principal', models.CharField(help_text='CNAE principal da empresa', max_length=10)),
                ('aliquota_pis', models.DecimalField(decimal_places=2, default=Decimal('0.65'), help_text='Alíquota padrão do PIS (%)', max_digits=5)),
                ('aliquota_cofins', models.DecimalField(decimal_places=2, default=Decimal('3.00'), help_text='Alíquota padrão do COFINS (%)', max_digits=5)),
                ('aliquota_iss', models.DecimalField(decimal_places=2, default=Decimal('5.00'), help_text='Alíquota padrão do ISS (%)', max_digits=5)),
                ('gerar_impostos_automaticamente', models.BooleanField(default=True, help_text='Gerar impostos automaticamente no final do mês')),
                ('dia_vencimento_impostos', models.IntegerField(default=15, help_text='Dia do mês para vencimento dos impostos', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('observacoes', models.TextField(blank=True)),
                ('empresa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuracao_impostos', to='core.empresa')),
            ],
            options={
                'verbose_name': 'Configuração de Impostos',
                'verbose_name_plural': 'Configurações de Impostos',
            },
        ),
        migrations.CreateModel(
            name='ContaBancaria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=200)),
                ('banco', models.CharField(max_length=100)),
                ('agencia', models.CharField(max_length=20)),
                ('conta', models.CharField(max_length=30)),
                ('digito', models.CharField(blank=True, max_length=5)),
                ('tipo_conta', models.CharField(choices=[('corrente', 'Conta Corrente'), ('poupanca', 'Poupança'), ('investimento', 'Conta Investimento'), ('cartao', 'Cartão de Crédito'), ('caixa', 'Caixa')], default='corrente', max_length=15)),
                ('kwik_chave', models.CharField(blank=True, max_length=100)),
                ('kwik_tipo', models.CharField(blank=True, choices=[('bi', 'BI'), ('nif', 'NIF'), ('email', 'Email'), ('telefone', 'Telefone'), ('chave_aleatoria', 'Chave Aleatória')], max_length=20)),
                ('saldo_inicial', models.DecimalField(decimal_places=2, default=0, help_text='Saldo inicial da conta', max_digits=12)),
                ('saldo_atual', models.DecimalField(decimal_places=2, default=0, help_text='Saldo atual calculado', max_digits=12)),
                ('limite_credito', models.DecimalField(decimal_places=2, default=0, help_text='Limite de crédito/cheque especial', max_digits=12)),
                ('limite_kwik', models.DecimalField(decimal_places=2, default=0, help_text='Limite diário para KWIK', max_digits=10)),
                ('ativa', models.BooleanField(default=True)),
                ('conta_principal', models.BooleanField(default=False)),
                ('permite_saldo_negativo', models.BooleanField(default=False)),
                ('codigo_integracao', models.CharField(blank=True, max_length=50)),
                ('ultima_conciliacao', models.DateField(blank=True, null=True)),
                ('observacoes', models.TextField(blank=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.empresa')),
            ],
            options={
                'verbose_name': 'Conta Bancária',
                'verbose_name_plural': 'Contas Bancárias',
                'ordering': ['-conta_principal', 'banco', 'conta'],
            },
        ),
        migrations.CreateModel(
            name='ConciliacaoBancaria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField()),
                ('saldo_banco_inicial', models.DecimalField(decimal_places=2, max_digits=12)),
                ('saldo_banco_final', models.DecimalField(decimal_places=2, max_digits=12)),
                ('saldo_sistema_inicial', models.DecimalField(decimal_places=2, max_digits=12)),
                ('saldo_sistema_final', models.DecimalField(decimal_places=2, max_digits=12)),
                ('diferenca', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('conciliada', 'Conciliada'), ('divergente', 'Divergente')], default='pendente', max_length=15)),
                ('data_conciliacao', models.DateTimeField(blank=True, null=True)),
                ('observacoes', models.TextField(blank=True)),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('conta_bancaria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conciliacoes', to='financeiro.contabancaria')),
            ],
            options={
                'verbose_name': 'Conciliação Bancária',
                'verbose_name_plural': 'Conciliações Bancárias',
                'ordering': ['-data_fim'],
            },
        ),
        migrations.CreateModel(
            name='ContaPagar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('numero_documento', models.CharField(max_length=50)),
                ('descricao', models.CharField(max_length=255)),
                ('tipo_conta', models.CharField(choices=[('fornecedor', 'Fornecedor'), ('funcionario', 'Funcionário'), ('servico', 'Serviço'), ('imposto', 'Imposto'), ('emprestimo', 'Empréstimo'), ('financiamento', 'Financiamento'), ('cartao', 'Cartão de Crédito'), ('outros', 'Outros')], max_length=15)),
                ('data_emissao', models.DateField()),
                ('data_vencimento', models.DateField()),
                ('data_pagamento', models.DateField(blank=True, null=True)),
                ('valor_original', models.DecimalField(decimal_places=2, max_digits=12)),
                ('valor_juros', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_multa', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_desconto', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_pago', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('valor_saldo', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('numero_parcela', models.IntegerField(default=1)),
                ('total_parcelas', models.IntegerField(default=1)),
                ('status', models.CharField(choices=[('aberta', 'Aberta'), ('vencida', 'Vencida'), ('paga', 'Paga'), ('cancelada', 'Cancelada'), ('renegociada', 'Renegociada')], default='aberta', max_length=15)),
                ('observacoes', models.TextField(blank=True)),
                ('centro_custo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='financeiro.centrocusto')),
                ('conta_pai', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parcelas', to='financeiro.contapagar')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.empresa')),
            ],
            options={
                'verbose_name': 'Conta a Pagar',
                'verbose_name_plural': 'Contas a Pagar',
                'ordering': ['data_vencimento'],
            },
        ),
    ]
