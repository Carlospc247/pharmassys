# Generated by Django 4.2.10 on 2025-10-16 13:56

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('descricao', models.TextField(blank=True)),
                ('nivel_hierarquico', models.IntegerField(default=1, help_text='1 = Nível mais alto na hierarquia')),
                ('categoria', models.CharField(choices=[('diretoria', 'Diretoria'), ('gerencia', 'Gerência'), ('coordenacao', 'Coordenação'), ('supervisao', 'Supervisão'), ('operacional', 'Operacional'), ('tecnico', 'Técnico'), ('administrativo', 'Administrativo'), ('vendas', 'Vendas'), ('direcao_tecnica', 'Direção Técnica'), ('estagiario', 'Estagiário'), ('terceirizado', 'Terceirizado'), ('rh', 'Recursos Humanos'), ('financeiro', 'Contabilidade'), ('outros', 'Outros')], default='operacional', max_length=20)),
                ('salario_base', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vale_alimentacao', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('vale_transporte', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('pode_estornar_pagamento', models.BooleanField(default=False)),
                ('pode_pagar_salario', models.BooleanField(default=True)),
                ('pode_vender', models.BooleanField(default=True)),
                ('pode_ver_vendas', models.BooleanField(default=False)),
                ('pode_fazer_desconto', models.BooleanField(default=False)),
                ('limite_desconto_percentual', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('pode_cancelar_venda', models.BooleanField(default=False)),
                ('pode_fazer_devolucao', models.BooleanField(default=False)),
                ('pode_alterar_preco', models.BooleanField(default=False)),
                ('pode_emitir_notacredito', models.BooleanField(default=False)),
                ('pode_aplicar_notacredito', models.BooleanField(default=False)),
                ('pode_aprovar_notacredito', models.BooleanField(default=False)),
                ('pode_emitir_notadebito', models.BooleanField(default=False)),
                ('pode_aplicar_notadebito', models.BooleanField(default=False)),
                ('pode_aprovar_notadebito', models.BooleanField(default=False)),
                ('pode_emitir_documentotransporte', models.BooleanField(default=False)),
                ('pode_confirmar_entrega', models.BooleanField(default=False)),
                ('pode_gerenciar_estoque', models.BooleanField(default=False)),
                ('pode_fazer_compras', models.BooleanField(default=False)),
                ('pode_aprovar_pedidos', models.BooleanField(default=False)),
                ('pode_gerenciar_funcionarios', models.BooleanField(default=False)),
                ('pode_editar_produtos', models.BooleanField(default=False)),
                ('pode_emitir_faturacredito', models.BooleanField(default=False)),
                ('pode_liquidar_faturacredito', models.BooleanField(default=False)),
                ('pode_emitir_proforma', models.BooleanField(default=False)),
                ('pode_aprovar_proforma', models.BooleanField(default=False)),
                ('pode_emitir_recibo', models.BooleanField(default=False)),
                ('pode_acessar_documentos', models.BooleanField(default=False)),
                ('pode_acessar_rh', models.BooleanField(default=False)),
                ('pode_acessar_financeiro', models.BooleanField(default=False)),
                ('pode_acessar_fornecedores', models.BooleanField(default=False)),
                ('pode_acessar_configuracoes', models.BooleanField(default=False)),
                ('ativo', models.BooleanField(default=True)),
                ('cargo_superior', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cargos_subordinados', to='funcionarios.cargo')),
                ('empresa', models.ForeignKey(blank=True, help_text='Se vazio, é um cargo global do sistema (modelo base).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cargos', to='core.empresa')),
                ('permissions', models.ManyToManyField(blank=True, help_text='Permissões aplicáveis a este cargo (vinculadas ao grupo automaticamente).', to='auth.permission', verbose_name='Permissões do Django')),
            ],
            options={
                'verbose_name': 'Cargo',
                'verbose_name_plural': 'Cargos',
                'ordering': ['nivel_hierarquico', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=100)),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('descricao', models.TextField(blank=True)),
                ('centro_custo', models.CharField(blank=True, max_length=20)),
                ('ativo', models.BooleanField(default=True)),
                ('loja', models.ForeignKey(blank=True, help_text='Se vazio, é um departamento global (modelo padrão do sistema).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='departamentos', to='core.loja')),
            ],
            options={
                'verbose_name': 'Departamento',
                'verbose_name_plural': 'Departamentos',
                'ordering': ['loja', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Equipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FolhaPagamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mes', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('ano', models.IntegerField(validators=[django.core.validators.MinValueValidator(2020), django.core.validators.MaxValueValidator(2050)])),
                ('descricao', models.CharField(help_text='Ex: Folha Janeiro 2024', max_length=200)),
                ('data_fechamento', models.DateField(blank=True, null=True)),
                ('data_pagamento', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('em_elaboracao', 'Em Elaboração'), ('calculada', 'Calculada'), ('aprovada', 'Aprovada'), ('fechada', 'Fechada'), ('paga', 'Paga'), ('cancelada', 'Cancelada')], default='em_elaboracao', max_length=20)),
                ('total_funcionarios', models.IntegerField(default=0)),
                ('total_salario_bruto', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_descontos', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_beneficios', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_liquido', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_inss_empresa', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_fgts', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('observacoes', models.TextField(blank=True)),
                ('aprovada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='folhas_aprovadas', to=settings.AUTH_USER_MODEL)),
                ('elaborada_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='folhas_elaboradas', to=settings.AUTH_USER_MODEL)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='folhas_pagamento', to='core.empresa')),
            ],
            options={
                'verbose_name': 'Folha de Pagamento',
                'verbose_name_plural': 'Folhas de Pagamento',
                'ordering': ['-ano', '-mes'],
            },
        ),
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('matricula', models.CharField(help_text='Matrícula do funcionário', max_length=20)),
                ('nome_completo', models.CharField(max_length=255)),
                ('bi', models.CharField(max_length=14, unique=True)),
                ('data_nascimento', models.DateField()),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro')], max_length=1)),
                ('estado_civil', models.CharField(blank=True, choices=[('solteiro', 'Solteiro(a)'), ('casado', 'Casado(a)'), ('divorciado', 'Divorciado(a)'), ('viuvo', 'Viúvo(a)'), ('uniao_estavel', 'União Estável'), ('separado', 'Separado(a)')], max_length=15)),
                ('nacionalidade', models.CharField(default='Angolana', max_length=50)),
                ('naturalidade', models.CharField(blank=True, max_length=100)),
                ('endereco', models.CharField(max_length=255)),
                ('numero', models.CharField(max_length=10)),
                ('bairro', models.CharField(max_length=100)),
                ('cidade', models.CharField(max_length=100)),
                ('provincia', models.CharField(default='Luanda', max_length=50)),
                ('postal', models.CharField(max_length=9)),
                ('telefone', models.CharField(blank=True, max_length=20)),
                ('whatsapp', models.CharField(blank=True, max_length=20)),
                ('email_pessoal', models.EmailField(blank=True, max_length=254)),
                ('email_corporativo', models.EmailField(blank=True, max_length=254)),
                ('tipo_contrato', models.CharField(choices=[('pf', 'Pessoa Física'), ('pj', 'Pessoa Jurídica'), ('estagiario', 'Estagiário'), ('terceirizado', 'Terceirizado'), ('freelancer', 'Freelancer'), ('voluntario', 'Voluntário')], default='pf', max_length=15)),
                ('data_admissao', models.DateField()),
                ('data_demissao', models.DateField(blank=True, null=True)),
                ('periodo_experiencia_dias', models.IntegerField(default=90)),
                ('data_fim_experiencia', models.DateField(blank=True, null=True)),
                ('salario_atual', models.DecimalField(decimal_places=2, max_digits=10)),
                ('vale_alimentacao', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('vale_transporte', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('outros_beneficios', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('comissao_percentual', models.DecimalField(decimal_places=2, default=0, help_text='Percentual de comissão sobre vendas', max_digits=5)),
                ('escolaridade', models.CharField(blank=True, choices=[('fundamental_incompleto', 'Fundamental Incompleto'), ('fundamental_completo', 'Fundamental Completo'), ('medio_incompleto', 'Médio Incompleto'), ('medio_completo', 'Médio Completo'), ('tecnico', 'Técnico'), ('superior_incompleto', 'Superior Incompleto'), ('superior_completo', 'Superior Completo'), ('pos_graduacao', 'Pós-graduação'), ('mestrado', 'Mestrado'), ('doutorado', 'Doutorado')], max_length=25)),
                ('curso_formacao', models.CharField(blank=True, max_length=200)),
                ('instituicao_ensino', models.CharField(blank=True, max_length=200)),
                ('ano_conclusao', models.IntegerField(blank=True, null=True)),
                ('numero_ofa', models.CharField(blank=True, help_text='Número do OFA', max_length=20)),
                ('data_validade_ofa', models.DateField(blank=True, null=True)),
                ('numero_ocpca', models.CharField(blank=True, help_text='Número do OCPCA', max_length=20)),
                ('outros_registros', models.TextField(blank=True, help_text='Outros registros profissionais')),
                ('banco', models.CharField(blank=True, max_length=100)),
                ('agencia', models.CharField(blank=True, max_length=20)),
                ('conta_corrente', models.CharField(blank=True, max_length=30)),
                ('tipo_conta', models.CharField(blank=True, choices=[('corrente', 'Conta Corrente'), ('poupanca', 'Poupança'), ('salario', 'Conta Salário')], max_length=20)),
                ('carga_horaria_semanal', models.IntegerField(default=44, help_text='Horas semanais')),
                ('horario_entrada', models.TimeField(blank=True, null=True)),
                ('horario_saida', models.TimeField(blank=True, null=True)),
                ('horario_almoco_inicio', models.TimeField(blank=True, null=True)),
                ('horario_almoco_fim', models.TimeField(blank=True, null=True)),
                ('trabalha_sabado', models.BooleanField(default=False)),
                ('trabalha_domingo', models.BooleanField(default=False)),
                ('trabalha_feriado', models.BooleanField(default=False)),
                ('ativo', models.BooleanField(default=True)),
                ('em_experiencia', models.BooleanField(default=True)),
                ('afastado', models.BooleanField(default=False)),
                ('motivo_afastamento', models.TextField(blank=True)),
                ('data_inicio_afastamento', models.DateField(blank=True, null=True)),
                ('data_fim_afastamento', models.DateField(blank=True, null=True)),
                ('observacoes', models.TextField(blank=True)),
                ('observacoes_rh', models.TextField(blank=True, help_text='Observações confidenciais do RH')),
                ('foto', models.ImageField(blank=True, default='funcionarios/fotos/funcionario.png', null=True, upload_to='funcionarios/fotos/')),
                ('cargo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='funcionarios', to='funcionarios.cargo')),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='funcionarios', to='funcionarios.departamento')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='funcionarios', to='core.empresa')),
                ('loja_principal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='funcionarios', to='core.loja')),
                ('lojas_acesso', models.ManyToManyField(help_text='Lojas que o funcionário tem acesso', related_name='funcionarios_com_acesso', to='core.loja')),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinados', to='funcionarios.funcionario')),
                ('usuario', models.OneToOneField(blank=True, help_text='Usuário do sistema (se tiver acesso)', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Funcionário',
                'verbose_name_plural': 'Funcionários',
                'ordering': ['nome_completo'],
            },
        ),
        migrations.CreateModel(
            name='ProcessoSeletivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('data_inicio', models.DateField(default=django.utils.timezone.now, verbose_name='Data de Início')),
                ('data_fim', models.DateField(blank=True, null=True, verbose_name='Data de Encerramento')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Processo Seletivo',
                'verbose_name_plural': 'Processos Seletivos',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='ResponsabilidadeTecnica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estabelecimento', models.CharField(max_length=200)),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField(blank=True, null=True)),
                ('responsabilidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsabilidades', to='funcionarios.cargo')),
            ],
        ),
        migrations.CreateModel(
            name='RegistroPonto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_registro', models.DateField()),
                ('hora_registro', models.TimeField()),
                ('tipo_registro', models.CharField(choices=[('entrada', 'Entrada'), ('saida_almoco', 'Saída para Almoço'), ('volta_almoco', 'Volta do Almoço'), ('saida', 'Saída'), ('entrada_extra', 'Entrada Extra'), ('saida_extra', 'Saída Extra')], max_length=15)),
                ('ip_registro', models.GenericIPAddressField(blank=True, null=True)),
                ('registro_manual', models.BooleanField(default=False)),
                ('justificativa', models.TextField(blank=True)),
                ('observacoes', models.TextField(blank=True)),
                ('aprovado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pontos_aprovados', to='funcionarios.funcionario')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registros_ponto', to='funcionarios.funcionario')),
                ('loja', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.loja')),
            ],
            options={
                'verbose_name': 'Registro de Ponto',
                'verbose_name_plural': 'Registros de Ponto',
                'ordering': ['-data_registro', '-hora_registro'],
            },
        ),
        migrations.CreateModel(
            name='Meta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título da Meta')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('data_inicio', models.DateField(default=django.utils.timezone.now, verbose_name='Data de Início')),
                ('data_fim', models.DateField(verbose_name='Data Limite')),
                ('concluida', models.BooleanField(default=False, verbose_name='Concluída')),
                ('progresso', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Progresso (%)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metas', to=settings.AUTH_USER_MODEL, verbose_name='Funcionário')),
            ],
            options={
                'verbose_name': 'Meta',
                'verbose_name_plural': 'Metas',
                'ordering': ['-data_fim'],
            },
        ),
        migrations.CreateModel(
            name='JornadaTrabalho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('turno', models.CharField(choices=[('manha', 'Manhã'), ('tarde', 'Tarde'), ('noite', 'Noite'), ('madrugada', 'Madrugada'), ('integral', 'Integral')], max_length=15)),
                ('horario_entrada', models.TimeField()),
                ('horario_saida', models.TimeField()),
                ('horario_almoco_inicio', models.TimeField(blank=True, null=True)),
                ('horario_almoco_fim', models.TimeField(blank=True, null=True)),
                ('departamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='funcionarios.departamento')),
                ('loja', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.loja')),
            ],
            options={
                'verbose_name': 'Jornada de Trabalho',
                'verbose_name_plural': 'Jornadas de Trabalho',
                'ordering': ['nome', 'turno'],
            },
        ),
        migrations.CreateModel(
            name='ItemFolhaPagamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('salario_base', models.DecimalField(decimal_places=2, max_digits=10)),
                ('dias_trabalhados', models.IntegerField(default=30)),
                ('dias_uteis_mes', models.IntegerField(default=22)),
                ('horas_extras', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('valor_hora_extra', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('salario_bruto', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_horas_extras', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('adicional_noturno', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('adicional_insalubridade', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('adicional_periculosidade', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('comissoes', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('bonus', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('outros_proventos', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('inss_funcionario', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('irrf', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('vale_transporte', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('vale_refeicao', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('plano_saude', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('adiantamentos', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('faltas', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('outros_descontos', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('inss_empresa', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('fgts', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_proventos', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_descontos', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_beneficios', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('salario_liquido', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('observacoes', models.TextField(blank=True)),
                ('folha', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='funcionarios.folhapagamento')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Item da Folha de Pagamento',
                'verbose_name_plural': 'Itens da Folha de Pagamento',
                'ordering': ['funcionario__nome_completo'],
                'unique_together': {('folha', 'funcionario')},
            },
        ),
        migrations.CreateModel(
            name='HistoricoSalarial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('salario_anterior', models.DecimalField(decimal_places=2, max_digits=10)),
                ('salario_novo', models.DecimalField(decimal_places=2, max_digits=10)),
                ('data_vigencia', models.DateField()),
                ('motivo', models.CharField(max_length=200)),
                ('observacoes', models.TextField(blank=True)),
                ('alterado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico_salarial', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Histórico Salarial',
                'verbose_name_plural': 'Históricos Salariais',
                'ordering': ['-data_vigencia'],
            },
        ),
        migrations.CreateModel(
            name='Formacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('especialidade_principal', models.CharField(blank=True, max_length=100)),
                ('curso', models.CharField(max_length=150)),
                ('titulo', models.CharField(max_length=150)),
                ('instituicao', models.CharField(max_length=150)),
                ('ano_conclusao', models.PositiveIntegerField()),
                ('funcionario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='funcionario', to='funcionarios.funcionario')),
            ],
        ),
        migrations.CreateModel(
            name='Ferias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('periodo_aquisitivo_inicio', models.DateField(help_text='Início do período aquisitivo')),
                ('periodo_aquisitivo_fim', models.DateField(help_text='Fim do período aquisitivo')),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField()),
                ('dias_ferias', models.IntegerField(help_text='Quantidade de dias de férias')),
                ('valor_ferias', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_um_terco', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('adiantamento_13', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('planejada', 'Planejada'), ('aprovada', 'Aprovada'), ('em_andamento', 'Em Andamento'), ('concluida', 'Concluída'), ('cancelada', 'Cancelada')], default='planejada', max_length=15)),
                ('data_solicitacao', models.DateField(auto_now_add=True)),
                ('data_aprovacao', models.DateField(blank=True, null=True)),
                ('observacoes', models.TextField(blank=True)),
                ('aprovada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ferias_aprovadas', to='funcionarios.funcionario')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ferias', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Férias',
                'verbose_name_plural': 'Férias',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='EventoFolha',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tipo_evento', models.CharField(choices=[('bonus', 'Bônus'), ('comissao', 'Comissão'), ('desconto', 'Desconto'), ('adiantamento', 'Adiantamento'), ('horas_extras', 'Horas Extras'), ('falta', 'Falta'), ('licenca', 'Licença'), ('ferias', 'Férias'), ('decimo_terceiro', '13º Salário'), ('outro', 'Outro')], max_length=20)),
                ('descricao', models.CharField(max_length=200)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantidade', models.DecimalField(decimal_places=2, default=1, max_digits=6)),
                ('data_evento', models.DateField()),
                ('aplicado', models.BooleanField(default=False)),
                ('observacoes', models.TextField(blank=True)),
                ('item_folha', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eventos', to='funcionarios.itemfolhapagamento')),
            ],
            options={
                'verbose_name': 'Evento da Folha',
                'verbose_name_plural': 'Eventos da Folha',
                'ordering': ['data_evento'],
            },
        ),
        migrations.CreateModel(
            name='EscalaTrabalho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_trabalho', models.DateField()),
                ('turno', models.CharField(choices=[('manha', 'Manhã'), ('tarde', 'Tarde'), ('noite', 'Noite'), ('madrugada', 'Madrugada'), ('integral', 'Integral')], max_length=15)),
                ('horario_entrada', models.TimeField()),
                ('horario_saida', models.TimeField()),
                ('horario_almoco_inicio', models.TimeField(blank=True, null=True)),
                ('horario_almoco_fim', models.TimeField(blank=True, null=True)),
                ('funcao_dia', models.CharField(blank=True, help_text='Função específica para este dia', max_length=100)),
                ('confirmada', models.BooleanField(default=False)),
                ('trabalhada', models.BooleanField(default=False)),
                ('observacoes', models.TextField(blank=True)),
                ('criada_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='escalas_criadas', to='funcionarios.funcionario')),
                ('departamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='funcionarios.departamento')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='escalas', to='funcionarios.funcionario')),
                ('loja', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.loja')),
            ],
            options={
                'verbose_name': 'Escala de Trabalho',
                'verbose_name_plural': 'Escalas de Trabalho',
                'ordering': ['data_trabalho', 'turno', 'funcionario'],
            },
        ),
        migrations.AddField(
            model_name='departamento',
            name='responsavel',
            field=models.ForeignKey(blank=True, help_text='Responsável dentro da empresa. Global não possui responsável.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='departamentos_responsavel', to='funcionarios.funcionario'),
        ),
        migrations.CreateModel(
            name='Comunicado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('mensagem', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('autor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comunicados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Capacitacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField()),
                ('tipo', models.CharField(choices=[('treinamento', 'Treinamento'), ('curso', 'Curso'), ('palestra', 'Palestra'), ('workshop', 'Workshop'), ('seminario', 'Seminário'), ('congresso', 'Congresso'), ('certificacao', 'Certificação'), ('reciclagem', 'Reciclagem')], max_length=15)),
                ('carga_horaria', models.IntegerField(help_text='Carga horária em horas')),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField()),
                ('data_inscricao', models.DateField(auto_now_add=True)),
                ('instituicao', models.CharField(max_length=200)),
                ('instrutor', models.CharField(blank=True, max_length=200)),
                ('local', models.CharField(blank=True, max_length=200)),
                ('modalidade', models.CharField(choices=[('presencial', 'Presencial'), ('online', 'Online'), ('hibrido', 'Híbrido'), ('ead', 'EAD')], default='presencial', max_length=20)),
                ('valor_inscricao', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_transporte', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_hospedagem', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_alimentacao', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('planejada', 'Planejada'), ('inscrito', 'Inscrito'), ('em_andamento', 'Em Andamento'), ('concluida', 'Concluída'), ('cancelada', 'Cancelada'), ('reprovado', 'Reprovado')], default='planejada', max_length=15)),
                ('nota_final', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('certificado', models.FileField(blank=True, null=True, upload_to='funcionarios/certificados/')),
                ('observacoes', models.TextField(blank=True)),
                ('aprovada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='capacitacoes_aprovadas', to='funcionarios.funcionario')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='capacitacoes', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Capacitação',
                'verbose_name_plural': 'Capacitações',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Candidato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome Completo')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('telefone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone')),
                ('curriculo', models.FileField(blank=True, null=True, upload_to='curriculos/', verbose_name='Currículo')),
                ('experiencia', models.TextField(blank=True, null=True, verbose_name='Experiência Profissional')),
                ('formacao', models.TextField(blank=True, null=True, verbose_name='Formação Acadêmica')),
                ('status', models.CharField(choices=[('analise', 'Em Análise'), ('entrevista', 'Entrevista'), ('aprovado', 'Aprovado'), ('reprovado', 'Reprovado')], default='analise', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidatos', to='funcionarios.processoseletivo', verbose_name='Processo Seletivo')),
            ],
            options={
                'verbose_name': 'Candidato',
                'verbose_name_plural': 'Candidatos',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Beneficio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tipo', models.CharField(choices=[('vale_transporte', 'Vale Transporte'), ('vale_refeicao', 'Vale Refeição'), ('plano_saude', 'Plano de Saúde'), ('outro', 'Outro')], max_length=20)),
                ('valor', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('descricao', models.TextField(blank=True)),
                ('ativo', models.BooleanField(default=True)),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beneficios', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Benefício',
                'verbose_name_plural': 'Benefícios',
                'ordering': ['funcionario', 'tipo'],
            },
        ),
        migrations.CreateModel(
            name='AvaliacaoDesempenho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tipo_avaliacao', models.CharField(choices=[('experiencia', 'Período de Experiência'), ('anual', 'Avaliação Anual'), ('semestral', 'Avaliação Semestral'), ('promocao', 'Avaliação para Promoção'), ('extraordinaria', 'Avaliação Extraordinária')], max_length=15)),
                ('periodo_inicio', models.DateField()),
                ('periodo_fim', models.DateField()),
                ('data_avaliacao', models.DateField()),
                ('pontualidade', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('assiduidade', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('qualidade_trabalho', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('produtividade', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('iniciativa', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('relacionamento_interpessoal', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('conhecimento_tecnico', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('lideranca', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('nota_geral', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('pontos_fortes', models.TextField()),
                ('pontos_melhorar', models.TextField()),
                ('metas_objetivos', models.TextField()),
                ('plano_desenvolvimento', models.TextField(blank=True)),
                ('recomenda_promocao', models.BooleanField(default=False)),
                ('recomenda_aumento', models.BooleanField(default=False)),
                ('recomenda_capacitacao', models.BooleanField(default=False)),
                ('observacoes', models.TextField(blank=True)),
                ('avaliador', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='avaliacoes_realizadas', to='funcionarios.funcionario')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Avaliação de Desempenho',
                'verbose_name_plural': 'Avaliações de Desempenho',
                'ordering': ['-data_avaliacao'],
            },
        ),
        migrations.CreateModel(
            name='Afastamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tipo', models.CharField(choices=[('ferias', 'Férias'), ('doenca', 'Doença'), ('maternidade', 'Maternidade'), ('paternidade', 'Paternidade'), ('outra', 'Outro')], max_length=20)),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField()),
                ('descricao', models.TextField(blank=True, help_text='Motivo ou observações adicionais')),
                ('aprovado', models.BooleanField(default=False)),
                ('aprovado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='afastamentos_aprovados', to='funcionarios.funcionario')),
                ('departamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='afastamentos', to='funcionarios.departamento')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='afastamentos', to='funcionarios.funcionario')),
                ('loja', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='afastamentos', to='core.loja')),
            ],
            options={
                'verbose_name': 'Afastamento',
                'verbose_name_plural': 'Afastamentos',
                'ordering': ['-data_inicio', 'funcionario'],
            },
        ),
        migrations.CreateModel(
            name='PontoEletronico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data', models.DateField(default=django.utils.timezone.now, verbose_name='Data')),
                ('entrada_manha', models.TimeField(blank=True, null=True, verbose_name='Entrada Manhã')),
                ('saida_almoco', models.TimeField(blank=True, null=True, verbose_name='Saída Almoço')),
                ('entrada_tarde', models.TimeField(blank=True, null=True, verbose_name='Entrada Tarde')),
                ('saida', models.TimeField(blank=True, null=True, verbose_name='Saída')),
                ('status', models.CharField(choices=[('presente', 'Presente'), ('falta', 'Falta'), ('falta_justificada', 'Falta Justificada'), ('ferias', 'Férias'), ('feriado', 'Feriado')], default='presente', max_length=20, verbose_name='Status do Dia')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações / Justificativa')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pontos', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Registo de Ponto',
                'verbose_name_plural': 'Registos de Ponto',
                'ordering': ['-data', 'funcionario'],
                'unique_together': {('funcionario', 'data')},
            },
        ),
        migrations.AddIndex(
            model_name='funcionario',
            index=models.Index(fields=['matricula'], name='funcionario_matricu_53afb0_idx'),
        ),
        migrations.AddIndex(
            model_name='funcionario',
            index=models.Index(fields=['bi'], name='funcionario_bi_90647c_idx'),
        ),
        migrations.AddIndex(
            model_name='funcionario',
            index=models.Index(fields=['nome_completo', 'empresa'], name='funcionario_nome_co_bc1944_idx'),
        ),
        migrations.AddIndex(
            model_name='funcionario',
            index=models.Index(fields=['empresa', 'ativo'], name='funcionario_empresa_00252f_idx'),
        ),
        migrations.AddIndex(
            model_name='funcionario',
            index=models.Index(fields=['cargo', 'ativo'], name='funcionario_cargo_i_197587_idx'),
        ),
        migrations.AddIndex(
            model_name='funcionario',
            index=models.Index(fields=['loja_principal', 'ativo'], name='funcionario_loja_pr_af3c53_idx'),
        ),
        migrations.AddIndex(
            model_name='funcionario',
            index=models.Index(fields=['data_admissao'], name='funcionario_data_ad_b6af97_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='folhapagamento',
            unique_together={('empresa', 'mes', 'ano')},
        ),
        migrations.AlterUniqueTogether(
            name='escalatrabalho',
            unique_together={('funcionario', 'data_trabalho', 'turno')},
        ),
        migrations.AlterUniqueTogether(
            name='departamento',
            unique_together={('nome', 'loja')},
        ),
    ]
