# Generated by Django 4.2.10 on 2025-10-16 13:56

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AvaliacaoFornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nota_pontualidade', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('nota_qualidade', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('nota_atendimento', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('nota_preco', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('nota_geral', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('pontos_positivos', models.TextField(blank=True)),
                ('pontos_negativos', models.TextField(blank=True)),
                ('sugestoes', models.TextField(blank=True)),
                ('recomendaria', models.BooleanField(default=True, help_text='Recomendaria este fornecedor?')),
            ],
            options={
                'verbose_name': 'Avaliação do Fornecedor',
                'verbose_name_plural': 'Avaliações dos Fornecedores',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CondicaoPagamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True)),
                ('prazo_dias', models.IntegerField(help_text='Prazo em dias para pagamento')),
                ('parcelas', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('intervalo_parcelas', models.IntegerField(default=30, help_text='Intervalo entre parcelas em dias')),
                ('desconto_a_vista', models.DecimalField(decimal_places=2, default=0, help_text='Desconto percentual para pagamento à vista', max_digits=5)),
                ('desconto_antecipado', models.DecimalField(decimal_places=2, default=0, help_text='Desconto percentual para pagamento antecipado', max_digits=5)),
                ('permite_cartao', models.BooleanField(default=False)),
                ('ativa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Condição de Pagamento',
                'verbose_name_plural': 'Condições de Pagamento',
                'ordering': ['prazo_dias', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='ContatoFornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=200)),
                ('cargo', models.CharField(blank=True, max_length=100)),
                ('departamento', models.CharField(blank=True, max_length=100)),
                ('tipo_contato', models.CharField(choices=[('comercial', 'Comercial'), ('financeiro', 'Financeiro'), ('tecnico', 'Técnico'), ('entrega', 'Entrega'), ('diretoria', 'Diretoria'), ('sac', 'SAC')], max_length=15)),
                ('telefone', models.CharField(blank=True, max_length=20)),
                ('celular', models.CharField(blank=True, max_length=20)),
                ('whatsapp', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('contato_principal', models.BooleanField(default=False)),
                ('recebe_pedidos', models.BooleanField(default=False)),
                ('recebe_cobrancas', models.BooleanField(default=False)),
                ('observacoes', models.TextField(blank=True)),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Contato do Fornecedor',
                'verbose_name_plural': 'Contatos do Fornecedor',
                'ordering': ['-contato_principal', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='ContratoFornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('data_inicio', models.DateField(default=django.utils.timezone.now)),
                ('data_fim', models.DateField()),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Contrato de Fornecedor',
                'verbose_name_plural': 'Contratos de Fornecedores',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='CotacaoFornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_validade', models.DateField(default=django.utils.timezone.now)),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Cotação de Fornecedor',
                'verbose_name_plural': 'Cotações de Fornecedores',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='DocumentoFornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_documento', models.CharField(choices=[('NIF', 'NIF'), ('CC', 'Certidão Comercial'), ('CONTRATO', 'Contrato Social'), ('OUTRO', 'Outro')], max_length=50)),
                ('nome_documento', models.CharField(max_length=255)),
                ('arquivo', models.FileField(upload_to='documentos_fornecedor/')),
                ('data_validade', models.DateField(blank=True, null=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Documento do Fornecedor',
                'verbose_name_plural': 'Documentos dos Fornecedores',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Fornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('codigo_fornecedor', models.CharField(help_text='Código interno do fornecedor', max_length=20, unique=True)),
                ('razao_social', models.CharField(max_length=255)),
                ('nome_fantasia', models.CharField(blank=True, max_length=255)),
                ('tipo_pessoa', models.CharField(choices=[('fisica', 'Pessoa Física'), ('juridica', 'Pessoa Jurídica')], default='juridica', max_length=10)),
                ('categoria', models.CharField(choices=[('laboratorio', 'Laboratório Farmacêutico'), ('distribuidor', 'Distribuidor'), ('atacadista', 'Atacadista'), ('importador', 'Importador'), ('representante', 'Representante'), ('cooperativa', 'Cooperativa'), ('prestador_servico', 'Prestador de Serviço'), ('outros', 'Outros')], default='distribuidor', max_length=20)),
                ('porte', models.CharField(choices=[('micro', 'Microempresa'), ('pequeno', 'Pequeno Porte'), ('medio', 'Médio Porte'), ('grande', 'Grande Porte')], default='medio', max_length=10)),
                ('foto', models.ImageField(blank=True, default='fornecedores/fotos/fornecedor.png', null=True, upload_to='fornecedores/fotos/')),
                ('nif_bi', models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator(message='Formato inválido. O NIF deve conter 10 dígitos (ex: 5001304461) ou o BI deve estar no formato 008693558LA042.', regex='^(\\d{10}|\\d{9}[A-Z]{2}\\d{3})$')], verbose_name='NIF / BI')),
                ('endereco', models.CharField(max_length=255)),
                ('numero', models.CharField(max_length=10)),
                ('bairro', models.CharField(max_length=100)),
                ('cidade', models.CharField(max_length=100)),
                ('provincia', models.CharField(choices=[('BGO', 'Bengo'), ('ICB', 'Icolo e Bengo'), ('BGU', 'Benguela'), ('BIE', 'Bié'), ('CAB', 'Cabinda'), ('CCU', 'Cuando Cubango'), ('CNO', 'Cuanza Norte'), ('CUS', 'Cuanza Sul'), ('CUN', 'Cunene'), ('HUA', 'Huambo'), ('HUI', 'Huíla'), ('LUA', 'Luanda'), ('LNO', 'Lunda Norte'), ('LSU', 'Lunda Sul'), ('MAL', 'Malanje'), ('MOX', 'Moxico'), ('NAM', 'Namibe'), ('UIG', 'Uíge'), ('ZAI', 'Zaire')], max_length=50)),
                ('postal', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator(message='Código postal deve estar no formato XXXXX-XXX', regex='^\\d{5}-\\d{3}$')])),
                ('pais', models.CharField(default='Angola', max_length=50)),
                ('telefone_principal', models.CharField(blank=True, max_length=20)),
                ('telefone_secundario', models.CharField(blank=True, max_length=20)),
                ('whatsapp', models.CharField(blank=True, max_length=20)),
                ('email_principal', models.EmailField(max_length=254)),
                ('email_financeiro', models.EmailField(blank=True, max_length=254)),
                ('email_comercial', models.EmailField(blank=True, max_length=254)),
                ('site', models.URLField(blank=True)),
                ('prazo_entrega_dias', models.IntegerField(default=7, help_text='Prazo médio de entrega em dias')),
                ('valor_minimo_pedido', models.DecimalField(decimal_places=2, default=0, help_text='Valor mínimo para pedidos', max_digits=10)),
                ('banco_principal', models.CharField(blank=True, max_length=100)),
                ('agencia', models.CharField(blank=True, max_length=20)),
                ('conta_corrente', models.CharField(blank=True, max_length=30)),
                ('permite_devolucao', models.BooleanField(default=True)),
                ('prazo_devolucao_dias', models.IntegerField(default=30)),
                ('trabalha_consignacao', models.BooleanField(default=False)),
                ('aceita_cartao', models.BooleanField(default=False)),
                ('entrega_proprio', models.BooleanField(default=False, help_text='Faz entrega própria')),
                ('nota_avaliacao', models.DecimalField(blank=True, decimal_places=2, help_text='Nota de 0 a 10', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('pontualidade_entrega', models.DecimalField(decimal_places=2, default=0, help_text='Percentual de entregas pontuais', max_digits=5)),
                ('qualidade_produtos', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('ativo', models.BooleanField(default=True)),
                ('bloqueado', models.BooleanField(default=False)),
                ('motivo_bloqueio', models.TextField(blank=True)),
                ('data_primeiro_pedido', models.DateField(blank=True, null=True)),
                ('data_ultimo_pedido', models.DateField(blank=True, null=True)),
                ('observacoes', models.TextField(blank=True)),
                ('observacoes_internas', models.TextField(blank=True, help_text='Observações internas (não visíveis ao fornecedor)')),
            ],
            options={
                'verbose_name': 'Fornecedor',
                'verbose_name_plural': 'Fornecedores',
                'ordering': ['razao_social'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status_anterior', models.CharField(max_length=20)),
                ('status_novo', models.CharField(max_length=20)),
                ('observacoes', models.TextField(blank=True)),
                ('dados_alterados', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'Histórico do Pedido',
                'verbose_name_plural': 'Históricos dos Pedidos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('numero_pedido', models.CharField(db_index=True, max_length=20, unique=True)),
                ('data_pedido', models.DateField(default=datetime.date.today)),
                ('data_envio', models.DateTimeField(blank=True, null=True)),
                ('data_confirmacao', models.DateTimeField(blank=True, null=True)),
                ('data_entrega_prevista', models.DateField(blank=True, null=True)),
                ('data_entrega_real', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('rascunho', 'Rascunho'), ('enviado', 'Enviado'), ('confirmado', 'Confirmado'), ('aprovado', 'Aprovado'), ('em_producao', 'Em Produção'), ('em_transito', 'Em Trânsito'), ('recebido_parcial', 'Recebido Parcial'), ('recebido', 'Recebido'), ('finalizado', 'Finalizado'), ('cancelado', 'Cancelado')], default='rascunho', max_length=20)),
                ('urgencia', models.CharField(choices=[('baixa', 'Baixa'), ('normal', 'Normal'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='normal', max_length=10)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('desconto_percentual', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('desconto_valor', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_frete', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_seguro', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('outras_despesas', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('forma_pagamento', models.CharField(blank=True, max_length=50)),
                ('endereco_entrega', models.TextField(blank=True, help_text='Endereço de entrega se diferente do padrão')),
                ('transportadora', models.CharField(blank=True, max_length=200)),
                ('numero_rastreamento', models.CharField(blank=True, max_length=50)),
                ('data_aprovacao', models.DateTimeField(blank=True, null=True)),
                ('observacoes', models.TextField(blank=True)),
                ('observacoes_internas', models.TextField(blank=True)),
                ('motivo_cancelamento', models.TextField(blank=True)),
                ('arquivo_pedido', models.FileField(blank=True, null=True, upload_to='pedidos/documentos/')),
                ('numero_orcamento_fornecedor', models.CharField(blank=True, max_length=50)),
                ('aprovador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pedidos_aprovados', to=settings.AUTH_USER_MODEL)),
                ('condicao_pagamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='fornecedores.condicaopagamento')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.empresa')),
                ('fornecedor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pedidos', to='fornecedores.fornecedor')),
                ('solicitante', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pedidos_solicitados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pedido',
                'verbose_name_plural': 'Pedidos',
                'ordering': ['-data_pedido', '-numero_pedido'],
            },
        ),
        migrations.CreateModel(
            name='ItemPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantidade', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('quantidade_recebida', models.IntegerField(default=0)),
                ('quantidade_devolvida', models.IntegerField(default=0)),
                ('preco_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('preco_custo_atual', models.DecimalField(decimal_places=2, help_text='Preço de custo atual do produto para comparação', max_digits=10)),
                ('desconto_item', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('numero_lote', models.CharField(blank=True, max_length=50)),
                ('data_fabricacao', models.DateField(blank=True, null=True)),
                ('data_vencimento', models.DateField(blank=True, null=True)),
                ('data_recebimento', models.DateField(blank=True, null=True)),
                ('observacoes', models.TextField(blank=True)),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='fornecedores.pedido')),
            ],
            options={
                'verbose_name': 'Item do Pedido',
                'verbose_name_plural': 'Itens do Pedido',
                'ordering': ['produto'],
            },
        ),
    ]
