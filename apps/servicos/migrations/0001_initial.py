# Generated by Django 5.0.6 on 2025-09-15 20:04

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clientes', '0001_initial'),
        ('core', '0001_initial'),
        ('funcionarios', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfiguracaoNotificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email_ativo', models.BooleanField(default=True)),
                ('sms_ativo', models.BooleanField(default=False)),
                ('whatsapp_ativo', models.BooleanField(default=False)),
                ('dias_notificacao', models.CharField(default='15,7,3,1', help_text='Dias de anteced√™ncia separados por v√≠rgula (ex: 15,7,3,1)', max_length=50)),
                ('horario_inicio_envio', models.TimeField(default='08:00')),
                ('horario_fim_envio', models.TimeField(default='18:00')),
                ('template_email_titulo', models.CharField(default='Lembrete de Consulta - {nome_paciente}', max_length=200)),
                ('template_email_mensagem', models.TextField(default='Ol√° {nome_paciente},\n\nEste √© um lembrete de que voc√™ tem uma consulta agendada:\n\nüìÖ Data: {data_consulta}\nüïê Hor√°rio: {hora_consulta}\nüë®\u200d‚öïÔ∏è Profissional: {farmaceutico}\nüè• Tipo de Servi√ßo: {servico}\n\nPor favor, chegue com 15 minutos de anteced√™ncia.\n\nAtenciosamente,\n{nome_empresa}')),
                ('template_sms_mensagem', models.TextField(default='Lembrete: Consulta em {data_consulta} √†s {hora_consulta} com {farmaceutico}. Chegue 15min antes. {nome_empresa}')),
                ('max_tentativas_envio', models.IntegerField(default=3)),
                ('intervalo_tentativas_horas', models.IntegerField(default=2)),
                ('empresa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='config_notificacoes', to='core.empresa')),
            ],
            options={
                'verbose_name': 'Configura√ß√£o de Notifica√ß√£o',
                'verbose_name_plural': 'Configura√ß√µes de Notifica√ß√µes',
            },
        ),
        migrations.CreateModel(
            name='Servico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('em_andamento', 'Em Andamento'), ('finalizado', 'Finalizado'), ('cancelado', 'Cancelado')], default='em_andamento', max_length=15)),
                ('nome', models.CharField(default='Servi√ßo Padr√£o', max_length=20, unique=True)),
                ('numero_servico', models.CharField(max_length=20, unique=True)),
                ('data_agendamento', models.DateTimeField()),
                ('data_realizacao', models.DateTimeField(blank=True, null=True)),
                ('duracao_minutos', models.IntegerField(default=30)),
                ('preco_servico', models.DecimalField(decimal_places=2, help_text='Pre√ßo cobrado pelo servi√ßo', max_digits=8)),
                ('desconto', models.DecimalField(decimal_places=2, default=0, help_text='Desconto aplicado', max_digits=6)),
                ('valor_final', models.DecimalField(decimal_places=2, help_text='Valor final ap√≥s desconto', max_digits=8)),
                ('observacoes_agendamento', models.TextField(blank=True)),
                ('observacoes_realizacao', models.TextField(blank=True)),
                ('resultado_servico', models.TextField(blank=True)),
                ('recomendacoes', models.TextField(blank=True)),
                ('avaliacao_cliente', models.IntegerField(blank=True, help_text='Avalia√ß√£o de 1 a 5 estrelas', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comentario_cliente', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.categoria')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='clientes.cliente')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.empresa')),
                ('funcionario', models.ForeignKey(blank=True, limit_choices_to={'cargo__nome__icontains': 'farmaceu'}, null=True, on_delete=django.db.models.deletion.PROTECT, to='funcionarios.funcionario')),
                ('usuario_criacao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Servi√ßo',
                'verbose_name_plural': 'Servi√ßos',
                'ordering': ['-data_agendamento'],
            },
        ),
        migrations.CreateModel(
            name='AgendamentoServico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('agendado', 'Agendado'), ('confirmado', 'Confirmado'), ('reagendado', 'Reagendado'), ('cancelado', 'Cancelado'), ('faltou', 'Cliente Faltou')], default='agendado', max_length=15)),
                ('duracao_minutos', models.IntegerField(default=30)),
                ('data_hora', models.DateTimeField()),
                ('observacoes', models.TextField(blank=True)),
                ('motivo_cancelamento', models.TextField(blank=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.empresa')),
                ('funcionario', models.ForeignKey(limit_choices_to={'cargo__nome__icontains': 'funcionario'}, on_delete=django.db.models.deletion.PROTECT, to='funcionarios.funcionario')),
                ('nome_completo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clientes.cliente')),
                ('servico', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='servicos.servico')),
            ],
            options={
                'verbose_name': 'Agendamento de Servi√ßo',
                'verbose_name_plural': 'Agendamentos de Servi√ßos',
                'ordering': ['data_hora'],
            },
        ),
        migrations.CreateModel(
            name='NotificacaoAgendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tipo_notificacao', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp'), ('ligacao', 'Liga√ß√£o'), ('sistema', 'Sistema')], max_length=15)),
                ('dias_antecedencia', models.IntegerField(help_text='Quantos dias antes do agendamento enviar')),
                ('titulo', models.CharField(max_length=200)),
                ('mensagem', models.TextField()),
                ('data_agendada_envio', models.DateTimeField()),
                ('data_envio', models.DateTimeField(blank=True, null=True)),
                ('data_entrega', models.DateTimeField(blank=True, null=True)),
                ('data_leitura', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('enviada', 'Enviada'), ('entregue', 'Entregue'), ('lida', 'Lida'), ('erro', 'Erro'), ('cancelada', 'Cancelada')], default='pendente', max_length=15)),
                ('tentativas_envio', models.IntegerField(default=0)),
                ('erro_envio', models.TextField(blank=True)),
                ('email_enviado', models.EmailField(blank=True, max_length=254)),
                ('telefone_enviado', models.CharField(blank=True, max_length=20)),
                ('agendamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to='servicos.agendamentoservico')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clientes.cliente')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.empresa')),
            ],
            options={
                'verbose_name': 'Notifica√ß√£o de Agendamento',
                'verbose_name_plural': 'Notifica√ß√µes de Agendamento',
                'ordering': ['-data_agendada_envio'],
                'indexes': [models.Index(fields=['data_agendada_envio', 'status'], name='servicos_no_data_ag_5c2344_idx'), models.Index(fields=['agendamento'], name='servicos_no_agendam_0ddafb_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='servico',
            index=models.Index(fields=['numero_servico'], name='servicos_se_numero__d1ae48_idx'),
        ),
        migrations.AddIndex(
            model_name='servico',
            index=models.Index(fields=['nome', 'status'], name='servicos_se_nome_11df0d_idx'),
        ),
        migrations.AddIndex(
            model_name='servico',
            index=models.Index(fields=['cliente', 'data_agendamento'], name='servicos_se_cliente_70659a_idx'),
        ),
        migrations.AddIndex(
            model_name='servico',
            index=models.Index(fields=['funcionario', 'data_agendamento'], name='servicos_se_funcion_ded61e_idx'),
        ),
        migrations.AddIndex(
            model_name='agendamentoservico',
            index=models.Index(fields=['data_hora', 'funcionario'], name='servicos_ag_data_ho_96cca4_idx'),
        ),
        migrations.AddIndex(
            model_name='agendamentoservico',
            index=models.Index(fields=['status', 'empresa'], name='servicos_ag_status_3c6425_idx'),
        ),
    ]
