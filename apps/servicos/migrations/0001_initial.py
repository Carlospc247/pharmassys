# Generated by Django 4.2.10 on 2025-10-16 13:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('funcionarios', '0001_initial'),
        ('clientes', '0003_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Servico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('duracao_padrao_minutos', models.IntegerField(default=30)),
                ('preco_padrao', models.DecimalField(decimal_places=2, max_digits=10)),
                ('desconto_percentual', models.DecimalField(decimal_places=2, default=0, help_text='Desconto promocional em % (ex: 10 = 10%)', max_digits=5)),
                ('iva_percentual', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='IVA (%)')),
                ('instrucoes_padrao', models.TextField(blank=True, help_text='Instru√ß√µes para o cliente ou para o funcion√°rio.')),
                ('ativo', models.BooleanField(default=True)),
                ('foto', models.ImageField(blank=True, default='servicos/fotos/servico.png', null=True, upload_to='servicos/fotos/')),
                ('nome', models.CharField(blank=True, max_length=255, null=True)),
                ('duracao_servico_padrao', models.DurationField(blank=True, null=True)),
                ('instrucoes_servico', models.TextField(blank=True, null=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.categoria')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicos_catalogo', to='core.empresa')),
            ],
            options={
                'verbose_name': 'Servi√ßo (Cat√°logo)',
                'verbose_name_plural': 'Servi√ßos (Cat√°logo)',
                'ordering': ['nome'],
                'unique_together': {('empresa', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='ConfiguracaoNotificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email_ativo', models.BooleanField(default=True)),
                ('sms_ativo', models.BooleanField(default=False)),
                ('whatsapp_ativo', models.BooleanField(default=False)),
                ('dias_notificacao', models.CharField(default='15,7,3,1', help_text='Dias de anteced√™ncia separados por v√≠rgula (ex: 15,7,3,1)', max_length=50)),
                ('horario_inicio_envio', models.TimeField(default='08:00')),
                ('horario_fim_envio', models.TimeField(default='18:00')),
                ('template_email_titulo', models.CharField(default='Lembrete de Consulta - {nome_paciente}', max_length=200)),
                ('template_email_mensagem', models.TextField(default='Ol√° {nome_paciente},\n\n\n\nEste √© um lembrete de que voc√™ tem uma consulta agendada:\n\nüìÖ Data: {data_consulta}\nüïê Hor√°rio: {hora_consulta}\nüë®\u200d‚öïÔ∏è Profissional: {farmaceutico}\nüè• Tipo de Servi√ßo: {servico}\n\nPor favor, chegue com 15 minutos de anteced√™ncia.\n\nAtenciosamente,\n{nome_empresa}')),
                ('template_sms_mensagem', models.TextField(default='Lembrete: Consulta em {data_consulta} √†s {hora_consulta} com {farmaceutico}. Chegue 15min antes. {nome_empresa}')),
                ('max_tentativas_envio', models.IntegerField(default=3)),
                ('intervalo_tentativas_horas', models.IntegerField(default=2)),
                ('empresa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='config_notificacoes', to='core.empresa')),
            ],
            options={
                'verbose_name': 'Configura√ß√£o de Notifica√ß√£o',
                'verbose_name_plural': 'Configura√ß√µes de Notifica√ß√µes',
            },
        ),
        migrations.CreateModel(
            name='AgendamentoServico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('agendado', 'Agendado'), ('em_andamento', 'Em Andamento'), ('finalizado', 'Finalizado'), ('cancelado', 'Cancelado'), ('faltou', 'Cliente Faltou')], default='agendado', max_length=15)),
                ('data_hora', models.DateTimeField()),
                ('valor_cobrado', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('observacoes', models.TextField(blank=True)),
                ('data_inicio_real', models.DateTimeField(blank=True, null=True)),
                ('data_fim_real', models.DateTimeField(blank=True, null=True)),
                ('resultado', models.TextField(blank=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agendamentos', to='clientes.cliente')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos_servicos', to='core.empresa')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agendamentos', to='funcionarios.funcionario')),
                ('servico', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agendamentos', to='servicos.servico')),
            ],
            options={
                'verbose_name': 'Agendamento',
                'verbose_name_plural': 'Agendamentos',
                'ordering': ['-data_hora'],
            },
        ),
        migrations.CreateModel(
            name='NotificacaoAgendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tipo_notificacao', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp'), ('ligacao', 'Liga√ß√£o'), ('sistema', 'Sistema')], max_length=15)),
                ('dias_antecedencia', models.IntegerField(help_text='Quantos dias antes do agendamento enviar')),
                ('titulo', models.CharField(max_length=200)),
                ('mensagem', models.TextField()),
                ('data_agendada_envio', models.DateTimeField()),
                ('data_envio', models.DateTimeField(blank=True, null=True)),
                ('data_entrega', models.DateTimeField(blank=True, null=True)),
                ('data_leitura', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('enviada', 'Enviada'), ('entregue', 'Entregue'), ('lida', 'Lida'), ('erro', 'Erro'), ('cancelada', 'Cancelada')], default='pendente', max_length=15)),
                ('tentativas_envio', models.IntegerField(default=0)),
                ('erro_envio', models.TextField(blank=True)),
                ('email_enviado', models.EmailField(blank=True, max_length=254)),
                ('telefone_enviado', models.CharField(blank=True, max_length=20)),
                ('agendamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to='servicos.agendamentoservico')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clientes.cliente')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.empresa')),
            ],
            options={
                'verbose_name': 'Notifica√ß√£o de Agendamento',
                'verbose_name_plural': 'Notifica√ß√µes de Agendamento',
                'ordering': ['-data_agendada_envio'],
                'indexes': [models.Index(fields=['data_agendada_envio', 'status'], name='servicos_no_data_ag_5c2344_idx'), models.Index(fields=['agendamento'], name='servicos_no_agendam_0ddafb_idx')],
            },
        ),
    ]
