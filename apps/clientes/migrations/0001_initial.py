# Generated by Django 4.2.10 on 2025-10-16 13:56

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CartaoFidelidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('numero_cartao', models.CharField(max_length=20, unique=True)),
                ('codigo_barras', models.CharField(blank=True, max_length=50)),
                ('pontos_atuais', models.IntegerField(default=0)),
                ('pontos_totais_acumulados', models.IntegerField(default=0)),
                ('pontos_utilizados', models.IntegerField(default=0)),
                ('ativo', models.BooleanField(default=True)),
                ('data_ativacao', models.DateField(auto_now_add=True)),
                ('data_ultima_movimentacao', models.DateField(blank=True, null=True)),
                ('nivel_atual', models.CharField(default='Bronze', max_length=20)),
                ('data_proximo_nivel', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Cartão Fidelidade',
                'verbose_name_plural': 'Cartões Fidelidade',
            },
        ),
        migrations.CreateModel(
            name='CategoriaCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True)),
                ('cor', models.CharField(default='#6B7280', help_text='Cor em hexadecimal', max_length=7)),
                ('desconto_padrao', models.DecimalField(decimal_places=2, default=0, help_text='Desconto padrão em percentual', max_digits=5)),
                ('limite_credito_padrao', models.DecimalField(decimal_places=2, default=0, help_text='Limite de crédito padrão', max_digits=10)),
                ('prazo_pagamento_dias', models.IntegerField(default=0, help_text='Prazo para pagamento em dias')),
                ('valor_minimo_compras', models.DecimalField(decimal_places=2, default=0, help_text='Valor mínimo em compras para esta categoria', max_digits=10)),
                ('quantidade_minima_compras', models.IntegerField(default=0, help_text='Quantidade mínima de compras para esta categoria')),
                ('ativa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Categoria de Cliente',
                'verbose_name_plural': 'Categorias de Clientes',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('codigo_cliente', models.CharField(editable=False, help_text='Código interno do cliente', max_length=20, unique=True)),
                ('tipo_cliente', models.CharField(choices=[('pessoa_fisica', 'Pessoa Física'), ('pessoa_juridica', 'Pessoa Jurídica')], default='pessoa_fisica', max_length=15)),
                ('nome_completo', models.CharField(help_text='Nome completo do cliente', max_length=255)),
                ('nome_social', models.CharField(blank=True, help_text='Nome usado para tratamento social', max_length=255, null=True)),
                ('bi', models.CharField(blank=True, help_text='Se for pessoa física', max_length=13)),
                ('razao_social', models.CharField(blank=True, help_text='Se for empresa | nome oficial de uma empresa, ou seja, o nome jurídico do negócio', max_length=255)),
                ('nome_fantasia', models.CharField(blank=True, help_text='Nome comercial pelo qual os clientes vão reconhecer e chamar a empresa', max_length=255, null=True)),
                ('nif', models.CharField(blank=True, help_text='Se for empresa', max_length=10)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro'), ('N', 'Não Informado')], default='N', max_length=1)),
                ('telefone', models.CharField(blank=True, max_length=20)),
                ('whatsapp', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('foto', models.ImageField(blank=True, default='clientes/fotos/clientes.png', null=True, upload_to='clientes/fotos/')),
                ('limite_credito', models.DecimalField(decimal_places=2, default=0, help_text='Limite de crédito para compras', max_digits=10)),
                ('desconto_padrao', models.DecimalField(decimal_places=2, default=0, help_text='Desconto padrão em percentual', max_digits=5)),
                ('ativo', models.BooleanField(default=True)),
                ('bloqueado', models.BooleanField(default=False)),
                ('motivo_bloqueio', models.TextField(blank=True)),
                ('vip', models.BooleanField(default=False, help_text='Cliente VIP')),
                ('data_primeira_compra', models.DateField(blank=True, null=True)),
                ('data_ultima_compra', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('observacoes', models.TextField(blank=True)),
                ('observacoes_internas', models.TextField(blank=True, help_text='Observações internas (não visíveis ao cliente)')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['nome_completo'],
            },
        ),
        migrations.CreateModel(
            name='ContatoCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tipo_contato', models.CharField(choices=[('telefone', 'Telefone'), ('whatsapp', 'WhatsApp'), ('email', 'Email'), ('telegram', 'Telegram')], max_length=15)),
                ('valor_contato', models.CharField(help_text='Número de telefone ou email', max_length=255)),
                ('descricao', models.CharField(blank=True, help_text='Ex: Celular pessoal, Email trabalho', max_length=100)),
                ('contato_principal', models.BooleanField(default=False)),
                ('permite_marketing', models.BooleanField(default=True)),
                ('verificado', models.BooleanField(default=False)),
                ('data_verificacao', models.DateTimeField(blank=True, null=True)),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Contato do Cliente',
                'verbose_name_plural': 'Contatos dos Clientes',
                'ordering': ['-contato_principal', 'tipo_contato'],
            },
        ),
        migrations.CreateModel(
            name='EnderecoCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome_endereco', models.CharField(help_text='Ex: Casa, Trabalho, Clínica', max_length=100)),
                ('tipo_endereco', models.CharField(choices=[('residencial', 'Residencial'), ('comercial', 'Comercial'), ('entrega', 'Entrega'), ('cobranca', 'Cobrança'), ('outro', 'Outro')], default='residencial', max_length=15)),
                ('endereco', models.CharField(max_length=255)),
                ('numero', models.CharField(max_length=10)),
                ('bairro', models.CharField(max_length=100)),
                ('cidade', models.CharField(max_length=100)),
                ('provincia', models.CharField(choices=[('BGO', 'Bengo'), ('ICB', 'Icolo e Bengo'), ('BGU', 'Benguela'), ('BIE', 'Bié'), ('CAB', 'Cabinda'), ('CCS', 'Cuando Cubango'), ('CNO', 'Cuanza Norte'), ('CUS', 'Cuanza Sul'), ('CNN', 'Cunene'), ('HUA', 'Huambo'), ('HUI', 'Huíla'), ('LUA', 'Luanda'), ('LNO', 'Lunda Norte'), ('LSU', 'Lunda Sul'), ('MAL', 'Malanje'), ('MOX', 'Moxico'), ('NAM', 'Namibe'), ('UIG', 'Uíge'), ('ZAI', 'Zaire')], max_length=50)),
                ('postal', models.CharField(max_length=9)),
                ('ponto_referencia', models.CharField(blank=True, max_length=255)),
                ('observacoes_entrega', models.TextField(blank=True)),
                ('endereco_principal', models.BooleanField(default=False)),
                ('endereco_entrega', models.BooleanField(default=True)),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Endereço do Cliente',
                'verbose_name_plural': 'Endereços dos Clientes',
                'ordering': ['-endereco_principal', 'nome_endereco'],
            },
        ),
        migrations.CreateModel(
            name='GrupoCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('desconto_padrao', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricoCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tipo_interacao', models.CharField(choices=[('compra', 'Compra'), ('devolucao', 'Devolução'), ('reclamacao', 'Reclamação'), ('elogio', 'Elogio'), ('consulta', 'Consulta'), ('orientacao', 'Orientação Farmacêutica'), ('ligacao', 'Ligação'), ('email', 'Email'), ('whatsapp', 'WhatsApp'), ('visita', 'Visita'), ('outros', 'Outros')], max_length=15)),
                ('titulo', models.CharField(max_length=200)),
                ('descricao', models.TextField()),
                ('data_interacao', models.DateTimeField(default=datetime.datetime.now)),
                ('prioridade', models.CharField(choices=[('baixa', 'Baixa'), ('media', 'Média'), ('alta', 'Alta'), ('critica', 'Crítica')], default='media', max_length=10)),
                ('resolvido', models.BooleanField(default=True)),
                ('data_resolucao', models.DateTimeField(blank=True, null=True)),
                ('resolucao', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Histórico do Cliente',
                'verbose_name_plural': 'Históricos dos Clientes',
                'ordering': ['-data_interacao'],
            },
        ),
        migrations.CreateModel(
            name='MovimentacaoFidelidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tipo_movimentacao', models.CharField(choices=[('credito', 'Crédito'), ('debito', 'Débito'), ('expiracao', 'Expiração'), ('bonus', 'Bônus'), ('ajuste', 'Ajuste')], max_length=15)),
                ('pontos', models.IntegerField()),
                ('descricao', models.CharField(max_length=255)),
                ('data_movimentacao', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Movimentação Fidelidade',
                'verbose_name_plural': 'Movimentações Fidelidade',
                'ordering': ['-data_movimentacao'],
            },
        ),
        migrations.CreateModel(
            name='Ponto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10)),
                ('data', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PreferenciaCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('descricao', models.CharField(blank=True, max_length=255)),
                ('prioridade', models.IntegerField(default=1, help_text='1 = Maior prioridade')),
                ('frequencia_compra', models.CharField(blank=True, choices=[('diaria', 'Diária'), ('semanal', 'Semanal'), ('quinzenal', 'Quinzenal'), ('mensal', 'Mensal'), ('bimestral', 'Bimestral'), ('trimestral', 'Trimestral'), ('semestral', 'Semestral'), ('anual', 'Anual'), ('esporadica', 'Esporádica')], max_length=20)),
                ('observacoes', models.TextField(blank=True)),
                ('ativa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Preferência do Cliente',
                'verbose_name_plural': 'Preferências dos Clientes',
                'ordering': ['prioridade', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TelefoneCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=20)),
                ('tipo', models.CharField(choices=[('celular', 'Celular'), ('fixo', 'Fixo')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telefones', to='clientes.cliente')),
            ],
        ),
        migrations.CreateModel(
            name='ProgramaFidelidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pontos', models.PositiveIntegerField(default=0)),
                ('nivel', models.CharField(blank=True, max_length=50, null=True)),
                ('data_entrada', models.DateField(auto_now_add=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programas', to='clientes.cliente')),
            ],
        ),
    ]
