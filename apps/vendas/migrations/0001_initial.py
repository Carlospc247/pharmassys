# Generated by Django 4.2.10 on 2025-10-16 13:56

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('servicos', '0001_initial'),
        ('clientes', '0003_initial'),
        ('produtos', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('financeiro', '0002_initial'),
        ('funcionarios', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DevolucaoVenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_devolucao', models.CharField(max_length=50, unique=True, verbose_name='Número da Devolução')),
                ('motivo', models.CharField(choices=[('arrependimento', 'Arrependimento/Desistência'), ('produto_danificado', 'Produto Danificado'), ('produto_errado', 'Produto Errado'), ('outros', 'Outros')], max_length=30, verbose_name='Motivo')),
                ('descricao_motivo', models.TextField(blank=True, verbose_name='Descrição do Motivo')),
                ('valor_devolvido', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Devolvido')),
                ('valor_restituido', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Valor Restituído')),
                ('taxa_devolucao', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Taxa de Devolução')),
                ('aprovada', models.BooleanField(default=False, verbose_name='Aprovada')),
                ('processada', models.BooleanField(default=False, verbose_name='Processada')),
                ('data_devolucao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Devolução')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('aprovador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devolucoes_aprovadas', to=settings.AUTH_USER_MODEL)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cliente', to='clientes.cliente')),
                ('solicitante', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='devolucoes_solicitadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Devolução de Venda',
                'verbose_name_plural': 'Devoluções de Vendas',
            },
        ),
        migrations.CreateModel(
            name='DocumentoTransporte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('numero_documento', models.CharField(max_length=200, unique=True, verbose_name='Número do Documento de Transporte')),
                ('data_emissao', models.DateTimeField(default=django.utils.timezone.now)),
                ('data_inicio_transporte', models.DateTimeField(verbose_name='Data/Hora de Início do Transporte')),
                ('data_previsao_entrega', models.DateTimeField(verbose_name='Previsão de Entrega')),
                ('data_entrega_real', models.DateTimeField(blank=True, null=True, verbose_name='Data/Hora da Entrega Real')),
                ('tipo_operacao', models.CharField(choices=[('venda', 'Venda de Mercadoria'), ('transferencia', 'Transferência entre Lojas'), ('consignacao', 'Consignação'), ('demonstracao', 'Demonstração'), ('devolucao', 'Devolução'), ('garantia', 'Garantia'), ('outros', 'Outros')], default='venda', max_length=20)),
                ('tipo_transporte', models.CharField(choices=[('proprio', 'Transporte Próprio'), ('terceirizado', 'Transporte Terceirizado'), ('correios', 'Correios'), ('transportadora', 'Transportadora'), ('entrega_propria', 'Entrega Própria')], default='proprio', max_length=20)),
                ('remetente_nome', models.CharField(max_length=200, verbose_name='Nome do Remetente')),
                ('remetente_nif', models.CharField(max_length=20, verbose_name='NIF do Remetente')),
                ('remetente_endereco', models.CharField(max_length=300, verbose_name='Endereço do Remetente')),
                ('remetente_telefone', models.CharField(max_length=20, verbose_name='Telefone do Remetente')),
                ('remetente_provincia', models.CharField(max_length=50, verbose_name='Província do Remetente')),
                ('destinatario_nome', models.CharField(max_length=200, verbose_name='Nome do Destinatário')),
                ('destinatario_nif', models.CharField(blank=True, max_length=20, verbose_name='NIF/BI do Destinatário')),
                ('destinatario_endereco', models.CharField(max_length=300, verbose_name='Endereço de Entrega')),
                ('destinatario_telefone', models.CharField(max_length=20, verbose_name='Telefone do Destinatário')),
                ('destinatario_provincia', models.CharField(max_length=50, verbose_name='Província do Destinatário')),
                ('transportador_nome', models.CharField(max_length=200, verbose_name='Nome do Transportador')),
                ('transportador_nif', models.CharField(blank=True, max_length=20, verbose_name='NIF do Transportador')),
                ('transportador_telefone', models.CharField(max_length=20, verbose_name='Telefone do Transportador')),
                ('veiculo_matricula', models.CharField(max_length=20, verbose_name='Matrícula do Veículo')),
                ('veiculo_modelo', models.CharField(max_length=100, verbose_name='Modelo do Veículo')),
                ('condutor_nome', models.CharField(max_length=200, verbose_name='Nome do Condutor')),
                ('condutor_carta', models.CharField(max_length=20, verbose_name='Número da Carta de Condução')),
                ('local_carregamento', models.CharField(max_length=300, verbose_name='Local de Carregamento')),
                ('local_descarga', models.CharField(max_length=300, verbose_name='Local de Descarga')),
                ('itinerario', models.TextField(verbose_name='Itinerário Detalhado')),
                ('valor_transporte', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Valor do Transporte')),
                ('peso_total', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=10, verbose_name='Peso Total (Kg)')),
                ('volume_total', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=10, verbose_name='Volume Total (m³)')),
                ('quantidade_volumes', models.PositiveIntegerField(default=1, verbose_name='Quantidade de Volumes')),
                ('status', models.CharField(choices=[('preparando', 'Preparando Carga'), ('em_transito', 'Em Trânsito'), ('entregue', 'Entregue'), ('devolvido', 'Devolvido'), ('cancelado', 'Cancelado')], default='preparando', max_length=20)),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações Gerais')),
                ('instrucoes_especiais', models.TextField(blank=True, verbose_name='Instruções Especiais')),
                ('assinatura_remetente', models.CharField(blank=True, max_length=200, verbose_name='Assinatura do Remetente')),
                ('assinatura_transportador', models.CharField(blank=True, max_length=200, verbose_name='Assinatura do Transportador')),
                ('assinatura_destinatario', models.CharField(blank=True, max_length=200, verbose_name='Assinatura do Destinatário')),
                ('confirmado_entrega_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documentos_transporte_confirmados', to=settings.AUTH_USER_MODEL)),
                ('destinatario_cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='documentos_transporte_destinatario', to='clientes.cliente')),
                ('emitido_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documentos_transporte_emitidos', to=settings.AUTH_USER_MODEL)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos_transporte', to='core.empresa')),
            ],
            options={
                'verbose_name': 'Documento de Transporte',
                'verbose_name_plural': 'Documentos de Transporte',
                'ordering': ['-data_emissao'],
                'permissions': [('emitir_documentotransporte', 'Pode emitir Documentos de Transporte'), ('confirmar_entrega', 'Pode confirmar entregas')],
            },
        ),
        migrations.CreateModel(
            name='FaturaCredito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_fatura', models.CharField(max_length=200, unique=True, verbose_name='Número da Fatura (FT)')),
                ('data_emissao', models.DateTimeField(default=django.utils.timezone.now)),
                ('data_vencimento', models.DateField(verbose_name='Data de Vencimento')),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('iva_valor', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_faturado', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('valor_pago', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Total Recebido')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('parcial', 'Pago Parcialmente'), ('liquidada', 'Liquidada'), ('cancelada', 'Cancelada')], default='pendente', max_length=20)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='faturas', to='clientes.cliente')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faturas_credito', to='core.empresa')),
                ('vendedor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='faturas_credito_emitidas', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Fatura Crédito',
                'verbose_name_plural': 'Faturas Crédito',
                'permissions': [('liquidar_faturacredito', 'Pode liquidar Faturas a Crédito')],
            },
        ),
        migrations.CreateModel(
            name='FaturaProforma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_proforma', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Número da Proforma')),
                ('data_emissao', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data de Emissão')),
                ('data_validade', models.DateField(help_text='Prazo para o cliente aceitar o orçamento.', verbose_name='Data de Validade')),
                ('status', models.CharField(choices=[('emitida', 'Emitida (Pendente)'), ('aceite', 'Aceite'), ('rejeitada', 'Rejeitada'), ('convertida', 'Convertida em Vatura/Venda')], default='emitida', max_length=15, verbose_name='Status')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('desconto_global', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('iva_valor', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='proformas_emitidas', to='clientes.cliente', verbose_name='Cliente')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='proformas_proprias', to='core.empresa', verbose_name='Empresa Emitente')),
            ],
            options={
                'verbose_name': 'Fatura Proforma',
                'verbose_name_plural': 'Faturas Proforma',
                'ordering': ['-data_emissao', 'numero_proforma'],
                'permissions': [('aprovar_faturaproforma', 'Pode aprovar Faturas Proforma'), ('imprimir_faturaproforma', 'Pode imprimir Faturas Proforma')],
            },
        ),
        migrations.CreateModel(
            name='FormaPagamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('codigo', models.CharField(blank=True, help_text='Código interno para identificação rápida.', max_length=20, null=True, verbose_name='Código')),
                ('tipo', models.CharField(choices=[('dinheiro', 'Dinheiro'), ('cartao_debito', 'Cartão de Débito'), ('cartao_credito', 'Cartão de Crédito'), ('transferencia', 'Transferência'), ('cheque', 'Cheque'), ('vale', 'Vale'), ('outros', 'Outros')], default='dinheiro', max_length=20, verbose_name='Tipo')),
                ('ativa', models.BooleanField(default=True, help_text='Desmarque para desativar esta forma de pagamento.', verbose_name='Ativa')),
                ('permite_parcelamento', models.BooleanField(default=False, verbose_name='Permite Parcelamento')),
                ('max_parcelas', models.PositiveIntegerField(default=1, help_text='Número máximo de parcelas permitidas.', verbose_name='Máximo de Parcelas')),
                ('taxa_administracao', models.DecimalField(decimal_places=2, default=0.0, help_text='Percentual da taxa. Ex: 2.5 para 2.5%', max_digits=5, verbose_name='Taxa de Administração (%)')),
                ('requer_autorizacao', models.BooleanField(default=False, help_text='Ex: transações de cartão de crédito.', verbose_name='Requer Autorização')),
                ('necessita_tef', models.BooleanField(default=False, help_text='Marque se requer um terminal de pagamento eletrónico.', verbose_name='Necessita TEF/POS')),
                ('codigo_integracao', models.CharField(blank=True, help_text='Código para integrações com gateways de pagamento.', max_length=50, null=True, verbose_name='Código de Integração')),
                ('valor_minimo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Mínimo')),
                ('valor_maximo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Máximo')),
                ('ordem_exibicao', models.PositiveIntegerField(default=0, help_text='Quanto menor o número, mais acima aparecerá na lista de opções.', verbose_name='Ordem de Exibição')),
                ('conta_destino', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='financeiro.contabancaria', verbose_name='Conta Bancária de Crédito')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formas_pagamento', to='core.empresa')),
            ],
            options={
                'verbose_name': 'Forma de Pagamento',
                'verbose_name_plural': 'Formas de Pagamento',
                'ordering': ['ordem_exibicao', 'nome'],
                'unique_together': {('nome', 'empresa')},
            },
        ),
        migrations.CreateModel(
            name='ItemFatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_item', models.CharField(max_length=255, verbose_name='Nome/Descrição')),
                ('quantidade', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Quantidade')),
                ('preco_unitario', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Preço Unitário')),
                ('desconto_item', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Desconto (Valor)')),
                ('iva_percentual', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, verbose_name='% IVA')),
                ('iva_valor', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Valor do IVA')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Subtotal Bruto')),
                ('total', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total do Item (c/ IVA)')),
                ('fatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='vendas.faturacredito', verbose_name='Fatura de Crédito')),
                ('produto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='produtos.produto', verbose_name='Produto')),
                ('servico', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='servicos.servico', verbose_name='Serviço')),
            ],
            options={
                'verbose_name': 'Item da Fatura de Crédito',
                'verbose_name_plural': 'Itens da Fatura de Crédito',
            },
        ),
        migrations.CreateModel(
            name='Venda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('iva_valor', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Valor do IVA')),
                ('numero_venda', models.CharField(max_length=200, unique=True, verbose_name='Nº Documento Fiscal')),
                ('tipo_venda', models.CharField(choices=[('fatura_recibo', 'Fatura Recibo'), ('balcao', 'Balcão'), ('entrega', 'Entrega'), ('online', 'Online')], default='fatura_recibo', max_length=20)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('desconto_valor', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('troco', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('valor_pago', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('hash_documento', models.CharField(blank=True, max_length=256, null=True, unique=True, verbose_name='Hash Criptográfico (SAF-T)')),
                ('atcud', models.CharField(blank=True, max_length=100, null=True, verbose_name='ATCUD (Código Único do Documento)')),
                ('data_venda', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('finalizada', 'Finalizada'), ('cancelada', 'Cancelada'), ('pendente', 'Pendente')], default='finalizada', max_length=20)),
                ('tem_fatura', models.BooleanField(default=False)),
                ('tem_recibo', models.BooleanField(default=False)),
                ('tem_nota_liquidacao', models.BooleanField(default=False)),
                ('tem_fatura_proforma', models.BooleanField(default=False)),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clientes.cliente')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendas', to='core.empresa')),
                ('forma_pagamento', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='vendas.formapagamento')),
                ('loja', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.loja')),
                ('vendedor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vendas', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Venda',
                'verbose_name_plural': 'Vendas',
            },
        ),
        migrations.CreateModel(
            name='Recibo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_recibo', models.CharField(max_length=200, unique=True, verbose_name='Número do Recibo (REC)')),
                ('data_recibo', models.DateTimeField(default=django.utils.timezone.now)),
                ('valor_recebido', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Recebido')),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recibos', to='core.empresa')),
                ('fatura', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='recibos', to='vendas.faturacredito', verbose_name='Fatura a Liquidar')),
                ('forma_pagamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vendas.formapagamento', verbose_name='Forma de Pagamento')),
            ],
            options={
                'verbose_name': 'Recibo',
                'verbose_name_plural': 'Recibos',
            },
        ),
        migrations.CreateModel(
            name='PagamentoVenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observacoes', models.CharField(blank=True, max_length=100)),
                ('valor_pago', models.DecimalField(decimal_places=2, max_digits=10)),
                ('numero_parcelas', models.PositiveIntegerField(default=1, verbose_name='Número de Parcelas')),
                ('valor_parcela', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Valor da Parcela')),
                ('valor_taxa', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_liquido', models.DecimalField(decimal_places=2, max_digits=10)),
                ('numero_autorizacao', models.CharField(blank=True, max_length=100, verbose_name='Autorização')),
                ('nsu', models.CharField(blank=True, max_length=100, verbose_name='NSU')),
                ('tid', models.CharField(blank=True, max_length=100, verbose_name='TID')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('processando', 'Processando'), ('aprovado', 'Aprovado'), ('rejeitado', 'Rejeitado'), ('estornado', 'Estornado'), ('cancelado', 'Cancelado')], default='pendente', max_length=20, verbose_name='Status')),
                ('data_processamento', models.DateTimeField(blank=True, null=True, verbose_name='Processado em')),
                ('forma_pagamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vendas.formapagamento')),
                ('venda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagamentos', to='vendas.venda')),
            ],
            options={
                'verbose_name': 'Pagamento de Venda',
                'verbose_name_plural': 'Pagamentos de Vendas',
            },
        ),
        migrations.CreateModel(
            name='Orcamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_orcamento', models.CharField(max_length=50, unique=True, verbose_name='Número do Orçamento')),
                ('data_emissao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Emissão')),
                ('data_validade', models.DateField(verbose_name='Data de Validade')),
                ('valor_subtotal', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Subtotal')),
                ('valor_desconto', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Desconto')),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Valor Total')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('aprovado', 'Aprovado'), ('convertido', 'Convertido em Venda'), ('cancelado', 'Cancelado'), ('expirado', 'Expirado')], default='pendente', max_length=20, verbose_name='Status')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orcamentos', to='clientes.cliente')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.empresa')),
                ('venda_convertida', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orcamento_origem', to='vendas.venda')),
                ('vendedor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orcamentos_criados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Orçamento',
                'verbose_name_plural': 'Orçamentos',
                'ordering': ['-data_emissao'],
            },
        ),
        migrations.CreateModel(
            name='NotaDebito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('numero_nota', models.CharField(max_length=200, unique=True, verbose_name='Número da Nota de Débito')),
                ('data_emissao', models.DateTimeField(default=django.utils.timezone.now)),
                ('data_aplicacao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Aplicação')),
                ('data_vencimento', models.DateField(help_text='Prazo para pagamento do débito', verbose_name='Data de Vencimento')),
                ('motivo', models.CharField(choices=[('cobranca_adicional', 'Cobrança Adicional de Serviços'), ('juros_mora', 'Juros de Mora'), ('multa_atraso', 'Multa por Atraso'), ('correcao_preco', 'Correção de Preço (Valor Menor Cobrado)'), ('servicos_extras', 'Serviços Extras Prestados'), ('erro_calculo', 'Correção de Erro de Cálculo'), ('reajuste_contratual', 'Reajuste Contratual'), ('despesas_extras', 'Despesas Extras'), ('imposto_adicional', 'Imposto Adicional'), ('outros', 'Outros Motivos')], max_length=30, verbose_name='Motivo da Nota')),
                ('descricao_motivo', models.TextField(verbose_name='Descrição Detalhada do Motivo')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações Adicionais')),
                ('subtotal_debito', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('iva_debito', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total_debito', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Valor Total do Débito')),
                ('valor_pago', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('status', models.CharField(choices=[('rascunho', 'Rascunho'), ('emitida', 'Emitida'), ('aplicada', 'Aplicada'), ('cancelada', 'Cancelada')], default='rascunho', max_length=20)),
                ('requer_aprovacao', models.BooleanField(default=False)),
                ('data_aprovacao', models.DateTimeField(blank=True, null=True)),
                ('aplicada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notas_debito_aplicadas', to=settings.AUTH_USER_MODEL)),
                ('aprovada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notas_debito_aprovadas', to=settings.AUTH_USER_MODEL)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notas_debito', to='clientes.cliente')),
                ('emitida_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notas_debito_emitidas', to=settings.AUTH_USER_MODEL)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas_debito', to='core.empresa')),
                ('fatura_credito_origem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='notas_debito_origem', to='vendas.faturacredito', verbose_name='Fatura Crédito de Origem (FT)')),
                ('venda_origem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='notas_debito_origem', to='vendas.venda', verbose_name='Venda de Origem (FR)')),
                ('vendedor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notas_debito_emitidas', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Nota de Débito',
                'verbose_name_plural': 'Notas de Débito',
                'ordering': ['-data_emissao'],
                'permissions': [('emitir_notadebito', 'Pode emitir Notas de Débito'), ('aprovar_notadebito', 'Pode aprovar Notas de Débito'), ('aplicar_notadebito', 'Pode aplicar Notas de Débito')],
            },
        ),
        migrations.CreateModel(
            name='NotaCredito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('numero_nota', models.CharField(max_length=200, unique=True, verbose_name='Número da Nota de Crédito')),
                ('data_emissao', models.DateTimeField(default=django.utils.timezone.now)),
                ('data_aplicacao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Aplicação')),
                ('motivo', models.CharField(choices=[('devolucao_total', 'Devolução Total de Mercadoria'), ('devolucao_parcial', 'Devolução Parcial de Mercadoria'), ('desconto_comercial', 'Desconto Comercial Concedido'), ('desconto_quantidade', 'Desconto por Quantidade'), ('correcao_preco', 'Correção de Preço (Erro na Fatura)'), ('cancelamento_servico', 'Cancelamento de Serviço'), ('erro_calculo', 'Erro de Cálculo na Fatura Original'), ('acordo_comercial', 'Acordo Comercial Posterior'), ('defeito_mercadoria', 'Defeito na Mercadoria'), ('outros', 'Outros Motivos')], max_length=30, verbose_name='Motivo da Nota')),
                ('descricao_motivo', models.TextField(verbose_name='Descrição Detalhada do Motivo')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações Adicionais')),
                ('subtotal_credito', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('iva_credito', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total_credito', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Valor Total do Crédito')),
                ('status', models.CharField(choices=[('rascunho', 'Rascunho'), ('emitida', 'Emitida'), ('aplicada', 'Aplicada'), ('cancelada', 'Cancelada')], default='rascunho', max_length=20)),
                ('requer_aprovacao', models.BooleanField(default=False)),
                ('data_aprovacao', models.DateTimeField(blank=True, null=True)),
                ('aplicada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notas_credito_aplicadas', to=settings.AUTH_USER_MODEL)),
                ('aprovada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notas_credito_aprovadas', to=settings.AUTH_USER_MODEL)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notas_credito', to='clientes.cliente')),
                ('emitida_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notas_credito_emitidas', to=settings.AUTH_USER_MODEL)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas_credito', to='core.empresa')),
                ('fatura_credito_origem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='notas_credito_origem', to='vendas.faturacredito', verbose_name='Fatura Crédito de Origem (FT)')),
                ('venda_origem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='notas_credito_origem', to='vendas.venda', verbose_name='Venda de Origem (FR)')),
                ('vendedor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notas_credito_emitidas', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Nota de Crédito',
                'verbose_name_plural': 'Notas de Crédito',
                'ordering': ['-data_emissao'],
                'permissions': [('emitir_notacredito', 'Pode emitir Notas de Crédito'), ('aprovar_notacredito', 'Pode aprovar Notas de Crédito'), ('aplicar_notacredito', 'Pode aplicar Notas de Crédito')],
            },
        ),
        migrations.CreateModel(
            name='ItemVenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nome_produto', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do Produto')),
                ('quantidade', models.IntegerField()),
                ('preco_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('desconto_item', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('nome_servico', models.CharField(blank=True, max_length=255, null=True)),
                ('duracao_servico_padrao', models.DurationField(blank=True, null=True)),
                ('instrucoes_servico', models.TextField(blank=True, null=True)),
                ('subtotal_sem_iva', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('tax_type', models.CharField(blank=True, max_length=3, null=True, verbose_name='Tipo de Imposto')),
                ('tax_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='Código da Taxa')),
                ('iva_valor', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='itens_venda', to='produtos.produto')),
                ('servico', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='itens_venda', to='servicos.servico')),
                ('venda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='vendas.venda')),
            ],
            options={
                'verbose_name': 'Item da Venda',
                'verbose_name_plural': 'Itens da Venda',
            },
        ),
        migrations.CreateModel(
            name='ItemProforma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.DecimalField(decimal_places=2, max_digits=10)),
                ('preco_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('desconto_item', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('iva_percentual', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('iva_valor', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('produto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='produtos.produto')),
                ('proforma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='vendas.faturaproforma')),
                ('servico', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='servicos.servico')),
            ],
        ),
        migrations.CreateModel(
            name='ItemOrcamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Quantidade')),
                ('valor_unitario', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Unitário')),
                ('total', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Total')),
                ('orcamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='vendas.orcamento')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='produtos.produto')),
            ],
            options={
                'verbose_name': 'Item de Orçamento',
                'verbose_name_plural': 'Itens de Orçamentos',
            },
        ),
        migrations.CreateModel(
            name='ItemNotaDebito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('descricao_item', models.CharField(max_length=255, verbose_name='Descrição do Item')),
                ('quantidade', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Quantidade')),
                ('valor_unitario', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Unitário')),
                ('iva_percentual', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('iva_valor', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_item', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total do Item')),
                ('justificativa', models.TextField(blank=True, verbose_name='Justificativa do Item')),
                ('nota_debito', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='vendas.notadebito')),
                ('produto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='produtos.produto')),
                ('servico', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='servicos.servico')),
            ],
            options={
                'verbose_name': 'Item da Nota de Débito',
                'verbose_name_plural': 'Itens da Nota de Débito',
            },
        ),
        migrations.CreateModel(
            name='ItemNotaCredito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('descricao_item', models.CharField(max_length=255, verbose_name='Descrição do Item')),
                ('quantidade_creditada', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Quantidade Creditada')),
                ('valor_unitario_credito', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Unitário do Crédito')),
                ('iva_percentual', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('iva_valor', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_item_credito', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total do Item Creditado')),
                ('motivo_item', models.TextField(blank=True, verbose_name='Motivo Específico do Item')),
                ('item_fatura_original', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='vendas.itemfatura', verbose_name='Item da Fatura Original')),
                ('item_venda_original', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='vendas.itemvenda', verbose_name='Item da Venda Original')),
                ('nota_credito', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='vendas.notacredito')),
                ('produto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='produtos.produto')),
                ('servico', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='servicos.servico')),
            ],
            options={
                'verbose_name': 'Item da Nota de Crédito',
                'verbose_name_plural': 'Itens da Nota de Crédito',
            },
        ),
        migrations.CreateModel(
            name='ItemDocumentoTransporte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('codigo_produto', models.CharField(max_length=50, verbose_name='Código do Produto')),
                ('descricao_produto', models.CharField(max_length=255, verbose_name='Descrição do Produto')),
                ('unidade_medida', models.CharField(default='UN', max_length=10, verbose_name='Unidade de Medida')),
                ('quantidade_enviada', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Quantidade Enviada')),
                ('quantidade_recebida', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Quantidade Recebida')),
                ('peso_unitario', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=10, verbose_name='Peso Unitário (Kg)')),
                ('peso_total', models.DecimalField(decimal_places=3, default=Decimal('0.000'), max_digits=10, verbose_name='Peso Total (Kg)')),
                ('tipo_embalagem', models.CharField(blank=True, max_length=50, verbose_name='Tipo de Embalagem')),
                ('numero_serie', models.CharField(blank=True, max_length=100, verbose_name='Número de Série')),
                ('lote', models.CharField(blank=True, max_length=50, verbose_name='Lote')),
                ('valor_unitario', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('valor_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('observacoes_item', models.TextField(blank=True, verbose_name='Observações do Item')),
                ('documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='vendas.documentotransporte')),
                ('item_fatura_original', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='vendas.itemfatura')),
                ('item_venda_original', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='vendas.itemvenda')),
                ('produto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='produtos.produto')),
            ],
            options={
                'verbose_name': 'Item do Documento de Transporte',
                'verbose_name_plural': 'Itens do Documento de Transporte',
            },
        ),
        migrations.CreateModel(
            name='ItemDevolucao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_devolvida', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Quantidade Devolvida')),
                ('valor_restituido', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor a Restituir')),
                ('motivo', models.TextField(blank=True, verbose_name='Motivo')),
                ('devolucao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='vendas.devolucaovenda')),
                ('produto', models.ForeignKey(help_text='O item exato da venda original que está a ser devolvido.', on_delete=django.db.models.deletion.PROTECT, to='vendas.itemvenda')),
            ],
            options={
                'verbose_name': 'Item de Devolução',
                'verbose_name_plural': 'Itens de Devolução',
            },
        ),
        migrations.CreateModel(
            name='HistoricoVenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_anterior', models.CharField(max_length=50, verbose_name='Status Anterior')),
                ('status_novo', models.CharField(max_length=50, verbose_name='Status Novo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('venda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico', to='vendas.venda')),
            ],
            options={
                'verbose_name': 'Histórico de Venda',
                'verbose_name_plural': 'Históricos de Vendas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Entrega',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('em_preparacao', 'Em Preparação'), ('em_rota', 'Em Rota'), ('entregue', 'Entregue'), ('falhou', 'Falha na Entrega'), ('cancelada', 'Cancelada')], default='pendente', max_length=20, verbose_name='Status')),
                ('endereco', models.TextField(verbose_name='Endereço de Entrega')),
                ('taxa_entrega', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Taxa de Entrega')),
                ('previsao_entrega', models.DateTimeField(blank=True, null=True, verbose_name='Previsão de Entrega')),
                ('data_entrega_real', models.DateTimeField(blank=True, null=True, verbose_name='Data da Entrega Real')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('entregador', models.ForeignKey(blank=True, help_text='Utilizador responsável pela entrega.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entregas_realizadas', to=settings.AUTH_USER_MODEL)),
                ('venda', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='entrega', to='vendas.venda')),
            ],
            options={
                'verbose_name': 'Entrega',
                'verbose_name_plural': 'Entregas',
            },
        ),
        migrations.AddField(
            model_name='documentotransporte',
            name='fatura_credito_origem',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='documentos_transporte', to='vendas.faturacredito', verbose_name='Fatura Crédito de Origem'),
        ),
        migrations.AddField(
            model_name='documentotransporte',
            name='venda_origem',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='documentos_transporte', to='vendas.venda', verbose_name='Venda de Origem'),
        ),
        migrations.AddField(
            model_name='devolucaovenda',
            name='venda_original',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='devolucoes', to='vendas.venda'),
        ),
        migrations.CreateModel(
            name='Comissao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_base', models.DecimalField(decimal_places=2, help_text='Valor da venda sobre o qual a comissão é calculada.', max_digits=10, verbose_name='Valor Base para Comissão')),
                ('percentual', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Percentual da Comissão (%)')),
                ('valor_comissao', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor da Comissão')),
                ('status', models.CharField(choices=[('pendente', 'Pendente de Pagamento'), ('paga', 'Paga'), ('cancelada', 'Cancelada')], default='pendente', max_length=20, verbose_name='Status')),
                ('data_pagamento', models.DateField(blank=True, null=True, verbose_name='Data de Pagamento')),
                ('observacoes', models.CharField(max_length=200, verbose_name='OBS')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('venda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comissoes', to='vendas.venda')),
                ('vendedor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comissoes_ganhas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comissão',
                'verbose_name_plural': 'Comissões',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MetaVenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_meta', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Código da Meta')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome da Meta')),
                ('tipo_periodo', models.CharField(choices=[('mensal', 'Mensal'), ('trimestral', 'Trimestral'), ('semestral', 'Semestral'), ('anual', 'Anual')], default='mensal', max_length=20, verbose_name='Tipo de Período')),
                ('mes', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Mês')),
                ('trimestre', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='Trimestre')),
                ('semestre', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2)], verbose_name='Semestre')),
                ('ano', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(2020), django.core.validators.MaxValueValidator(2050)], verbose_name='Ano')),
                ('data_inicio', models.DateField(verbose_name='Data de Início')),
                ('data_fim', models.DateField(verbose_name='Data de Fim')),
                ('tipo_meta', models.CharField(choices=[('faturamento', 'Faturamento'), ('quantidade', 'Quantidade de Vendas'), ('produtos', 'Quantidade de Produtos'), ('clientes', 'Novos Clientes'), ('tickets', 'Ticket Médio'), ('mista', 'Meta Mista')], default='faturamento', max_length=20, verbose_name='Tipo de Meta')),
                ('meta_faturamento', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Meta de Faturamento (AKZ)')),
                ('meta_quantidade_vendas', models.PositiveIntegerField(blank=True, null=True, verbose_name='Meta de Quantidade de Vendas')),
                ('meta_quantidade_produtos', models.PositiveIntegerField(blank=True, null=True, verbose_name='Meta de Quantidade de Produtos')),
                ('meta_novos_clientes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Meta de Novos Clientes')),
                ('meta_ticket_medio', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Meta de Ticket Médio (AKZ)')),
                ('peso_faturamento', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Peso Faturamento (%)')),
                ('peso_quantidade', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Peso Quantidade (%)')),
                ('peso_clientes', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Peso Clientes (%)')),
                ('status', models.CharField(choices=[('ativa', 'Ativa'), ('pausada', 'Pausada'), ('finalizada', 'Finalizada'), ('cancelada', 'Cancelada')], default='ativa', max_length=20, verbose_name='Status')),
                ('comissao_extra_percentual', models.DecimalField(decimal_places=2, default=0, help_text='Percentual extra de comissão ao atingir a meta', max_digits=5, verbose_name='Comissão Extra (%)')),
                ('bonus_monetario', models.DecimalField(decimal_places=2, default=0, help_text='Valor fixo pago ao atingir a meta', max_digits=10, verbose_name='Bônus Monetário (AKZ)')),
                ('premio_descricao', models.TextField(blank=True, help_text='Descrição de outros prêmios ou benefícios', verbose_name='Descrição do Prêmio')),
                ('permite_superacao', models.BooleanField(default=True, help_text='Se permite ultrapassar 100% da meta', verbose_name='Permite Superação')),
                ('bonus_superacao_percentual', models.DecimalField(decimal_places=2, default=0, help_text='Percentual extra para cada % acima de 100%', max_digits=5, verbose_name='Bônus por Superação (%)')),
                ('meta_minima_percentual', models.DecimalField(decimal_places=2, default=80, help_text='Percentual mínimo para receber recompensas', max_digits=5, verbose_name='Meta Mínima (%)')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('criterios_avaliacao', models.TextField(blank=True, help_text='Critérios específicos para avaliação desta meta', verbose_name='Critérios de Avaliação')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_aprovacao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Aprovação')),
                ('aprovado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='metas_aprovadas', to=settings.AUTH_USER_MODEL, verbose_name='Aprovado Por')),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='metas_criadas', to=settings.AUTH_USER_MODEL, verbose_name='Criado Por')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='metas_vendas', to='core.empresa', verbose_name='Empresa')),
                ('equipe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='metas_vendas', to='funcionarios.equipe', verbose_name='Equipe')),
                ('vendedor', models.ForeignKey(blank=True, help_text='Deixe vazio para meta geral da empresa', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='metas_vendas', to='funcionarios.funcionario', verbose_name='Vendedor')),
            ],
            options={
                'verbose_name': 'Meta de Venda',
                'verbose_name_plural': 'Metas de Vendas',
                'ordering': ['-ano', '-mes', 'vendedor'],
                'indexes': [models.Index(fields=['empresa', 'vendedor', 'status'], name='vendas_meta_empresa_3a8dad_idx'), models.Index(fields=['ano', 'mes'], name='vendas_meta_ano_f3d218_idx'), models.Index(fields=['data_inicio', 'data_fim'], name='vendas_meta_data_in_6e2071_idx'), models.Index(fields=['codigo_meta'], name='vendas_meta_codigo__11c3e0_idx')],
                'unique_together': {('empresa', 'vendedor', 'tipo_periodo', 'semestre', 'ano'), ('empresa', 'vendedor', 'tipo_periodo', 'mes', 'ano'), ('empresa', 'vendedor', 'tipo_periodo', 'trimestre', 'ano')},
            },
        ),
        migrations.CreateModel(
            name='Convenio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Convênio')),
                ('contato', models.CharField(max_length=200, verbose_name='Pessoa de contato do convenio')),
                ('telefone', models.CharField(max_length=9, verbose_name='Telefone da Seguradora')),
                ('observacoes', models.CharField(max_length=200, verbose_name='OBS:')),
                ('codigo', models.CharField(blank=True, help_text='Código de identificação do convênio.', max_length=50, null=True, verbose_name='Código')),
                ('percentual_desconto', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Percentual de Desconto (%)')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativo')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='convenios', to='core.empresa')),
            ],
            options={
                'verbose_name': 'Convênio',
                'verbose_name_plural': 'Convênios',
                'ordering': ['nome'],
                'unique_together': {('nome', 'empresa')},
            },
        ),
    ]
