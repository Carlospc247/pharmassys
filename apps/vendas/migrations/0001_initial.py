# Generated by Django 5.0.6 on 2025-09-15 20:04

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clientes', '0002_initial'),
        ('core', '0001_initial'),
        ('funcionarios', '0001_initial'),
        ('produtos', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DevolucaoVenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_devolucao', models.CharField(max_length=50, unique=True, verbose_name='Número da Devolução')),
                ('motivo', models.CharField(choices=[('arrependimento', 'Arrependimento/Desistência'), ('produto_danificado', 'Produto Danificado'), ('produto_errado', 'Produto Errado'), ('outros', 'Outros')], max_length=30, verbose_name='Motivo')),
                ('descricao_motivo', models.TextField(blank=True, verbose_name='Descrição do Motivo')),
                ('valor_devolvido', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Devolvido')),
                ('valor_restituido', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Valor Restituído')),
                ('taxa_devolucao', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Taxa de Devolução')),
                ('aprovada', models.BooleanField(default=False, verbose_name='Aprovada')),
                ('processada', models.BooleanField(default=False, verbose_name='Processada')),
                ('data_devolucao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Devolução')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('aprovador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devolucoes_aprovadas', to=settings.AUTH_USER_MODEL)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cliente', to='clientes.cliente')),
                ('solicitante', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='devolucoes_solicitadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Devolução de Venda',
                'verbose_name_plural': 'Devoluções de Vendas',
            },
        ),
        migrations.CreateModel(
            name='FormaPagamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('codigo', models.CharField(blank=True, help_text='Código interno para identificação rápida.', max_length=20, null=True, verbose_name='Código')),
                ('tipo', models.CharField(choices=[('dinheiro', 'Dinheiro'), ('cartao_debito', 'Cartão de Débito'), ('cartao_credito', 'Cartão de Crédito'), ('transferencia', 'Transferência'), ('outro', 'Outro')], default='dinheiro', max_length=20, verbose_name='Tipo')),
                ('ativa', models.BooleanField(default=True, help_text='Desmarque para desativar esta forma de pagamento.', verbose_name='Ativa')),
                ('permite_parcelamento', models.BooleanField(default=False, verbose_name='Permite Parcelamento')),
                ('max_parcelas', models.PositiveIntegerField(default=1, help_text='Número máximo de parcelas permitidas.', verbose_name='Máximo de Parcelas')),
                ('taxa_administracao', models.DecimalField(decimal_places=2, default=0.0, help_text='Percentual da taxa. Ex: 2.5 para 2.5%', max_digits=5, verbose_name='Taxa de Administração (%)')),
                ('requer_autorizacao', models.BooleanField(default=False, help_text='Ex: transações de cartão de crédito.', verbose_name='Requer Autorização')),
                ('necessita_tef', models.BooleanField(default=False, help_text='Marque se requer um terminal de pagamento eletrónico.', verbose_name='Necessita TEF/POS')),
                ('codigo_integracao', models.CharField(blank=True, help_text='Código para integrações com gateways de pagamento.', max_length=50, null=True, verbose_name='Código de Integração')),
                ('valor_minimo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Mínimo')),
                ('valor_maximo', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Máximo')),
                ('ordem_exibicao', models.PositiveIntegerField(default=0, help_text='Quanto menor o número, mais acima aparecerá na lista de opções.', verbose_name='Ordem de Exibição')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formas_pagamento', to='core.empresa')),
            ],
            options={
                'verbose_name': 'Forma de Pagamento',
                'verbose_name_plural': 'Formas de Pagamento',
                'ordering': ['ordem_exibicao', 'nome'],
                'unique_together': {('nome', 'empresa')},
            },
        ),
        migrations.CreateModel(
            name='ItemVenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantidade', models.IntegerField()),
                ('preco_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('desconto_item', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='produtos.produto')),
            ],
            options={
                'verbose_name': 'Item da Venda',
                'verbose_name_plural': 'Itens da Venda',
            },
        ),
        migrations.CreateModel(
            name='ItemDevolucao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_devolvida', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Quantidade Devolvida')),
                ('valor_restituido', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor a Restituir')),
                ('motivo', models.TextField(blank=True, verbose_name='Motivo')),
                ('devolucao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='vendas.devolucaovenda')),
                ('produto', models.ForeignKey(help_text='O item exato da venda original que está a ser devolvido.', on_delete=django.db.models.deletion.PROTECT, to='vendas.itemvenda')),
            ],
            options={
                'verbose_name': 'Item de Devolução',
                'verbose_name_plural': 'Itens de Devolução',
            },
        ),
        migrations.CreateModel(
            name='Orcamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_orcamento', models.CharField(max_length=50, unique=True, verbose_name='Número do Orçamento')),
                ('data_emissao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Emissão')),
                ('data_validade', models.DateField(verbose_name='Data de Validade')),
                ('valor_subtotal', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Subtotal')),
                ('valor_desconto', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Desconto')),
                ('valor_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Valor Total')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('aprovado', 'Aprovado'), ('convertido', 'Convertido em Venda'), ('cancelado', 'Cancelado'), ('expirado', 'Expirado')], default='pendente', max_length=20, verbose_name='Status')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orcamentos', to='clientes.cliente')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.empresa')),
                ('vendedor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orcamentos_criados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Orçamento',
                'verbose_name_plural': 'Orçamentos',
                'ordering': ['-data_emissao'],
            },
        ),
        migrations.CreateModel(
            name='ItemOrcamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Quantidade')),
                ('valor_unitario', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Unitário')),
                ('valor_total', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Total')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='produtos.produto')),
                ('orcamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='vendas.orcamento')),
            ],
            options={
                'verbose_name': 'Item de Orçamento',
                'verbose_name_plural': 'Itens de Orçamentos',
            },
        ),
        migrations.CreateModel(
            name='Venda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('numero_venda', models.CharField(max_length=20, unique=True)),
                ('tipo_venda', models.CharField(choices=[('balcao', 'Balcão'), ('entrega', 'Entrega'), ('online', 'Online')], default='balcao', max_length=20)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('desconto_valor', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('troco', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('valor_pago', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('data_venda', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('finalizada', 'Finalizada'), ('cancelada', 'Cancelada'), ('pendente', 'Pendente')], default='finalizada', max_length=20)),
                ('tem_fatura', models.BooleanField(default=False)),
                ('tem_recibo', models.BooleanField(default=False)),
                ('tem_nota_liquidacao', models.BooleanField(default=False)),
                ('tem_fatura_proforma', models.BooleanField(default=False)),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clientes.cliente')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendas', to='core.empresa')),
                ('forma_pagamento', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='vendas.formapagamento')),
                ('loja', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.loja')),
                ('vendedor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vendas', to='funcionarios.funcionario')),
            ],
            options={
                'verbose_name': 'Venda',
                'verbose_name_plural': 'Vendas',
            },
        ),
        migrations.CreateModel(
            name='PagamentoVenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observacoes', models.CharField(blank=True, max_length=100)),
                ('valor_pago', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Pago')),
                ('numero_parcelas', models.PositiveIntegerField(default=1, verbose_name='Número de Parcelas')),
                ('valor_parcela', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Valor da Parcela')),
                ('valor_taxa', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Taxa')),
                ('valor_liquido', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Valor Líquido')),
                ('numero_autorizacao', models.CharField(blank=True, max_length=100, verbose_name='Autorização')),
                ('nsu', models.CharField(blank=True, max_length=100, verbose_name='NSU')),
                ('tid', models.CharField(blank=True, max_length=100, verbose_name='TID')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('processando', 'Processando'), ('aprovado', 'Aprovado'), ('rejeitado', 'Rejeitado'), ('estornado', 'Estornado'), ('cancelado', 'Cancelado')], default='pendente', max_length=20, verbose_name='Status')),
                ('data_processamento', models.DateTimeField(blank=True, null=True, verbose_name='Processado em')),
                ('forma_pagamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vendas.formapagamento')),
                ('venda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagamentos', to='vendas.venda')),
            ],
            options={
                'verbose_name': 'Pagamento de Venda',
                'verbose_name_plural': 'Pagamentos de Vendas',
            },
        ),
        migrations.AddField(
            model_name='orcamento',
            name='venda_convertida',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orcamento_origem', to='vendas.venda'),
        ),
        migrations.AddField(
            model_name='itemvenda',
            name='venda',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='vendas.venda'),
        ),
        migrations.CreateModel(
            name='HistoricoVenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_anterior', models.CharField(max_length=50, verbose_name='Status Anterior')),
                ('status_novo', models.CharField(max_length=50, verbose_name='Status Novo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('venda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico', to='vendas.venda')),
            ],
            options={
                'verbose_name': 'Histórico de Venda',
                'verbose_name_plural': 'Históricos de Vendas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Entrega',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('em_preparacao', 'Em Preparação'), ('em_rota', 'Em Rota'), ('entregue', 'Entregue'), ('falhou', 'Falha na Entrega'), ('cancelada', 'Cancelada')], default='pendente', max_length=20, verbose_name='Status')),
                ('endereco', models.TextField(verbose_name='Endereço de Entrega')),
                ('taxa_entrega', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Taxa de Entrega')),
                ('previsao_entrega', models.DateTimeField(blank=True, null=True, verbose_name='Previsão de Entrega')),
                ('data_entrega_real', models.DateTimeField(blank=True, null=True, verbose_name='Data da Entrega Real')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('entregador', models.ForeignKey(blank=True, help_text='Utilizador responsável pela entrega.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entregas_realizadas', to=settings.AUTH_USER_MODEL)),
                ('venda', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='entrega', to='vendas.venda')),
            ],
            options={
                'verbose_name': 'Entrega',
                'verbose_name_plural': 'Entregas',
            },
        ),
        migrations.AddField(
            model_name='devolucaovenda',
            name='venda_original',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='devolucoes', to='vendas.venda'),
        ),
        migrations.CreateModel(
            name='Comissao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_base', models.DecimalField(decimal_places=2, help_text='Valor da venda sobre o qual a comissão é calculada.', max_digits=10, verbose_name='Valor Base para Comissão')),
                ('percentual', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Percentual da Comissão (%)')),
                ('valor_comissao', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor da Comissão')),
                ('status', models.CharField(choices=[('pendente', 'Pendente de Pagamento'), ('paga', 'Paga'), ('cancelada', 'Cancelada')], default='pendente', max_length=20, verbose_name='Status')),
                ('data_pagamento', models.DateField(blank=True, null=True, verbose_name='Data de Pagamento')),
                ('observacoes', models.CharField(max_length=200, verbose_name='OBS')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('vendedor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comissoes_ganhas', to=settings.AUTH_USER_MODEL)),
                ('venda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comissoes', to='vendas.venda')),
            ],
            options={
                'verbose_name': 'Comissão',
                'verbose_name_plural': 'Comissões',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Convenio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Convênio')),
                ('contato', models.CharField(max_length=200, verbose_name='Pessoa de contato do convenio')),
                ('telefone', models.CharField(max_length=9, verbose_name='Telefone da Seguradora')),
                ('observacoes', models.CharField(max_length=200, verbose_name='OBS:')),
                ('codigo', models.CharField(blank=True, help_text='Código de identificação do convênio.', max_length=50, null=True, verbose_name='Código')),
                ('percentual_desconto', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Percentual de Desconto (%)')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativo')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='convenios', to='core.empresa')),
            ],
            options={
                'verbose_name': 'Convênio',
                'verbose_name_plural': 'Convênios',
                'ordering': ['nome'],
                'unique_together': {('nome', 'empresa')},
            },
        ),
        migrations.CreateModel(
            name='MetaVenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_meta', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Código da Meta')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome da Meta')),
                ('tipo_periodo', models.CharField(choices=[('mensal', 'Mensal'), ('trimestral', 'Trimestral'), ('semestral', 'Semestral'), ('anual', 'Anual')], default='mensal', max_length=20, verbose_name='Tipo de Período')),
                ('mes', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Mês')),
                ('trimestre', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='Trimestre')),
                ('semestre', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2)], verbose_name='Semestre')),
                ('ano', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(2020), django.core.validators.MaxValueValidator(2050)], verbose_name='Ano')),
                ('data_inicio', models.DateField(verbose_name='Data de Início')),
                ('data_fim', models.DateField(verbose_name='Data de Fim')),
                ('tipo_meta', models.CharField(choices=[('faturamento', 'Faturamento'), ('quantidade', 'Quantidade de Vendas'), ('produtos', 'Quantidade de Produtos'), ('clientes', 'Novos Clientes'), ('tickets', 'Ticket Médio'), ('mista', 'Meta Mista')], default='faturamento', max_length=20, verbose_name='Tipo de Meta')),
                ('meta_faturamento', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Meta de Faturamento (AKZ)')),
                ('meta_quantidade_vendas', models.PositiveIntegerField(blank=True, null=True, verbose_name='Meta de Quantidade de Vendas')),
                ('meta_quantidade_produtos', models.PositiveIntegerField(blank=True, null=True, verbose_name='Meta de Quantidade de Produtos')),
                ('meta_novos_clientes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Meta de Novos Clientes')),
                ('meta_ticket_medio', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Meta de Ticket Médio (AKZ)')),
                ('peso_faturamento', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Peso Faturamento (%)')),
                ('peso_quantidade', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Peso Quantidade (%)')),
                ('peso_clientes', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Peso Clientes (%)')),
                ('status', models.CharField(choices=[('ativa', 'Ativa'), ('pausada', 'Pausada'), ('finalizada', 'Finalizada'), ('cancelada', 'Cancelada')], default='ativa', max_length=20, verbose_name='Status')),
                ('comissao_extra_percentual', models.DecimalField(decimal_places=2, default=0, help_text='Percentual extra de comissão ao atingir a meta', max_digits=5, verbose_name='Comissão Extra (%)')),
                ('bonus_monetario', models.DecimalField(decimal_places=2, default=0, help_text='Valor fixo pago ao atingir a meta', max_digits=10, verbose_name='Bônus Monetário (AKZ)')),
                ('premio_descricao', models.TextField(blank=True, help_text='Descrição de outros prêmios ou benefícios', verbose_name='Descrição do Prêmio')),
                ('permite_superacao', models.BooleanField(default=True, help_text='Se permite ultrapassar 100% da meta', verbose_name='Permite Superação')),
                ('bonus_superacao_percentual', models.DecimalField(decimal_places=2, default=0, help_text='Percentual extra para cada % acima de 100%', max_digits=5, verbose_name='Bônus por Superação (%)')),
                ('meta_minima_percentual', models.DecimalField(decimal_places=2, default=80, help_text='Percentual mínimo para receber recompensas', max_digits=5, verbose_name='Meta Mínima (%)')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('criterios_avaliacao', models.TextField(blank=True, help_text='Critérios específicos para avaliação desta meta', verbose_name='Critérios de Avaliação')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_aprovacao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Aprovação')),
                ('aprovado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='metas_aprovadas', to=settings.AUTH_USER_MODEL, verbose_name='Aprovado Por')),
                ('criado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='metas_criadas', to=settings.AUTH_USER_MODEL, verbose_name='Criado Por')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='metas_vendas', to='core.empresa', verbose_name='Empresa')),
                ('equipe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='metas_vendas', to='funcionarios.equipe', verbose_name='Equipe')),
                ('vendedor', models.ForeignKey(blank=True, help_text='Deixe vazio para meta geral da empresa', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='metas_vendas', to='funcionarios.funcionario', verbose_name='Vendedor')),
            ],
            options={
                'verbose_name': 'Meta de Venda',
                'verbose_name_plural': 'Metas de Vendas',
                'ordering': ['-ano', '-mes', 'vendedor'],
                'indexes': [models.Index(fields=['empresa', 'vendedor', 'status'], name='vendas_meta_empresa_3a8dad_idx'), models.Index(fields=['ano', 'mes'], name='vendas_meta_ano_f3d218_idx'), models.Index(fields=['data_inicio', 'data_fim'], name='vendas_meta_data_in_6e2071_idx'), models.Index(fields=['codigo_meta'], name='vendas_meta_codigo__11c3e0_idx')],
                'unique_together': {('empresa', 'vendedor', 'tipo_periodo', 'mes', 'ano'), ('empresa', 'vendedor', 'tipo_periodo', 'semestre', 'ano'), ('empresa', 'vendedor', 'tipo_periodo', 'trimestre', 'ano')},
            },
        ),
    ]
